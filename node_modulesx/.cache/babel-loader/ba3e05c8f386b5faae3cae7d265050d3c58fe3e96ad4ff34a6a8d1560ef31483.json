{"ast":null,"code":"var express = require('express');\nvar app = express();\n// for parsing the body in POST request\nvar bodyParser = require('body-parser');\nvar users = [{\n  id: 1,\n  name: \"John Doe\",\n  age: 23,\n  email: \"john@doe.com\"\n}];\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\n\n// GET /api/users\nexport var get = app.get('/api/users', function (req, res) {\n  console.log(res.json(users));\n  return res.json(users);\n});\n\n/* POST /api/users\r\n    {\r\n        \"user\": {\r\n           \"id\": 3,\r\n            \"name\": \"Test User\",\r\n            \"age\" : 20,\r\n            \"email\": \"test@test.com\"\r\n        }\r\n    }\r\n*/\nexport var post = app.post('/api/users', function (req, res) {\n  var user = req.body.user;\n  users.push(user);\n  return res.send('User has been added successfully');\n});\napp.listen('3000', function () {\n  console.log('Server listening on port 3000');\n});","map":{"version":3,"names":["express","require","app","bodyParser","users","id","name","age","email","use","urlencoded","extended","json","get","req","res","console","log","post","user","body","push","send","listen"],"sources":["C:/foodngo/src/server/index.js"],"sourcesContent":["var express = require('express');\r\nvar app = express();\r\n// for parsing the body in POST request\r\nvar bodyParser = require('body-parser');\r\n\r\nvar users =[{\r\n    id: 1,\r\n    name: \"John Doe\",\r\n    age : 23,\r\n    email: \"john@doe.com\"\r\n}];\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n// GET /api/users\r\nexport var get = app.get('/api/users', function(req, res){\r\n    console.log(res.json(users));\r\n    return res.json(users);    \r\n});\r\n\r\n\r\n/* POST /api/users\r\n    {\r\n        \"user\": {\r\n           \"id\": 3,\r\n            \"name\": \"Test User\",\r\n            \"age\" : 20,\r\n            \"email\": \"test@test.com\"\r\n        }\r\n    }\r\n*/\r\nexport var post = app.post('/api/users', function (req, res) {\r\n    var user = req.body.user;\r\n    users.push(user);\r\n\r\n    return res.send('User has been added successfully');\r\n});\r\n\r\napp.listen('3000', function(){\r\n    console.log('Server listening on port 3000');\r\n});"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,GAAG,GAAGF,OAAO,EAAE;AACnB;AACA,IAAIG,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEvC,IAAIG,KAAK,GAAE,CAAC;EACRC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,UAAU;EAChBC,GAAG,EAAG,EAAE;EACRC,KAAK,EAAE;AACX,CAAC,CAAC;AAEFN,GAAG,CAACO,GAAG,CAACN,UAAU,CAACO,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAM,CAAC,CAAC,CAAC;AACnDT,GAAG,CAACO,GAAG,CAACN,UAAU,CAACS,IAAI,EAAE,CAAC;;AAE1B;AACA,OAAO,IAAIC,GAAG,GAAGX,GAAG,CAACW,GAAG,CAAC,YAAY,EAAE,UAASC,GAAG,EAAEC,GAAG,EAAC;EACrDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACH,IAAI,CAACR,KAAK,CAAC,CAAC;EAC5B,OAAOW,GAAG,CAACH,IAAI,CAACR,KAAK,CAAC;AAC1B,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIc,IAAI,GAAGhB,GAAG,CAACgB,IAAI,CAAC,YAAY,EAAE,UAAUJ,GAAG,EAAEC,GAAG,EAAE;EACzD,IAAII,IAAI,GAAGL,GAAG,CAACM,IAAI,CAACD,IAAI;EACxBf,KAAK,CAACiB,IAAI,CAACF,IAAI,CAAC;EAEhB,OAAOJ,GAAG,CAACO,IAAI,CAAC,kCAAkC,CAAC;AACvD,CAAC,CAAC;AAEFpB,GAAG,CAACqB,MAAM,CAAC,MAAM,EAAE,YAAU;EACzBP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAChD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}