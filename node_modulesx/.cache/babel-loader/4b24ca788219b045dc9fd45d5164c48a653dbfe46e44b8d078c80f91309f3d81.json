{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\OrderTransactionSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { inputDataDelivery } from \"../../styles/Constants\";\nimport { FormBox, SummaryBox } from \"../../styles/OrderTrans\";\nimport { InputTitleText } from \"../../styles/TextStyles\";\nimport { FoodData } from \"../../testData/FoodData\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { Input } from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OrderTransactionSub = _ref => {\n  _s();\n  let {\n    filter\n  } = _ref;\n  const [food, setFood] = useState(FoodData);\n  const [cart, setCart] = useState([]);\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  function setInputs(data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        backgroundColor: \"yellow\",\n        display: \"flex\"\n      },\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\",\n          margin: \"20px 20px 20px 20px\",\n          backgroundColor: \"green\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: item.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormBox, {\n      children: [setInputs(inputDataDelivery), setInputs(inputDataDelivery)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SummaryBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(OrderTransactionSub, \"9/hzfHUXci7/Ln8VLnT3f07SNRY=\");\n_c = OrderTransactionSub;\nvar _c;\n$RefreshReg$(_c, \"OrderTransactionSub\");","map":{"version":3,"names":["useState","useEffect","inputDataDelivery","FormBox","SummaryBox","InputTitleText","FoodData","moveCartSlider","Input","OrderTransactionSub","filter","food","setFood","cart","setCart","windowSize","setWindowSize","getWindowSize","innerWidth","innerHeight","window","handleWindowResize","addEventListener","length","removeEventListener","setInputs","data","width","backgroundColor","display","map","item","index","margin","title","placeholder"],"sources":["C:/foodngo/src/components/subScreens/OrderTransactionSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { LogoImg } from \"../../locales/images/logo\";\r\nimport { Food } from \"../../models/Food\";\r\nimport { FoodTile } from \"../../models/FoodComp\";\r\nimport { BgLogo, GridBox } from \"../../style\";\r\nimport { CartBox } from \"../../styles/CartBox\";\r\nimport {\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  InputsI,\r\n} from \"../../styles/Constants\";\r\nimport { FormBox, SummaryBox } from \"../../styles/OrderTrans\";\r\nimport { InputTitleText, SerifTextS } from \"../../styles/TextStyles\";\r\nimport { FoodData } from \"../../testData/FoodData\";\r\nimport { CartSlider } from \"../CartSlider\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { sortFoodBy } from \"../functions/sortFoodBy\";\r\nimport { Input } from \"../Input\";\r\n\r\nexport const OrderTransactionSub = ({ filter }: any) => {\r\n  const [food, setFood] = useState<Food[]>(FoodData);\r\n  const [cart, setCart] = useState<Food[]>([]);\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n\r\n  function getWindowSize() {\r\n    const { innerWidth, innerHeight } = window;\r\n    return { innerWidth, innerHeight };\r\n  }\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  function setInputs(data: InputsI[]) {\r\n    return (\r\n      <div\r\n        style={{ width: \"100%\", backgroundColor: \"yellow\", display: \"flex\" }}\r\n      >\r\n        {data.map((item, index) => (\r\n          <div\r\n            style={{\r\n              width: \"20%\",\r\n              margin: \"20px 20px 20px 20px\",\r\n              backgroundColor: \"green\",\r\n            }}\r\n          >\r\n            <InputTitleText>{item.title}</InputTitleText>\r\n            <Input placeholder={item.placeholder} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormBox>\r\n        {setInputs(inputDataDelivery)}\r\n        {setInputs(inputDataDelivery)}\r\n      </FormBox>\r\n      <SummaryBox></SummaryBox>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAM3C,SACEC,iBAAiB,QAGZ,wBAAwB;AAC/B,SAASC,OAAO,EAAEC,UAAU,QAAQ,yBAAyB;AAC7D,SAASC,cAAc,QAAoB,yBAAyB;AACpE,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,SAASC,cAAc,QAAQ,6BAA6B;AAE5D,SAASC,KAAK,QAAQ,UAAU;AAAC;AAAA;AAEjC,OAAO,MAAMC,mBAAmB,GAAG,QAAqB;EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAASM,QAAQ,CAAC;EAClD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAACiB,aAAa,EAAE,CAAC;EAE7D,SAASA,aAAa,GAAG;IACvB,MAAM;MAAEC,UAAU;MAAEC;IAAY,CAAC,GAAGC,MAAM;IAC1C,OAAO;MAAEF,UAAU;MAAEC;IAAY,CAAC;EACpC;EACAlB,SAAS,CAAC,MAAM;IACd,SAASoB,kBAAkB,GAAG;MAC5BL,aAAa,CAACC,aAAa,EAAE,CAAC;IAChC;IAEAG,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAED,kBAAkB,CAAC;IACrDd,cAAc,CAACM,IAAI,CAACU,MAAM,CAAC;IAC3B,OAAO,MAAM;MACXH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,SAASY,SAAS,CAACC,IAAe,EAAE;IAClC,oBACE;MACE,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,eAAe,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAA,UAEpEH,IAAI,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpB;QACE,KAAK,EAAE;UACLL,KAAK,EAAE,KAAK;UACZM,MAAM,EAAE,qBAAqB;UAC7BL,eAAe,EAAE;QACnB,CAAE;QAAA,wBAEF,QAAC,cAAc;UAAA,UAAEG,IAAI,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC7C,QAAC,KAAK;UAAC,WAAW,EAAEH,IAAI,CAACI;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3C;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;EAEA,oBACE;IAAA,wBACE,QAAC,OAAO;MAAA,WACLV,SAAS,CAACvB,iBAAiB,CAAC,EAC5BuB,SAAS,CAACvB,iBAAiB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB,eACV,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAc;EAAA,gBACxB;AAEP,CAAC;AAAC,GAnDWO,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}