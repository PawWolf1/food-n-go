{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\functions\\\\setInputsToForm.tsx\";\nimport { margin } from \"../../styles/Constants\";\nimport { InputOrderBox } from \"../../styles/Input\";\nimport { InputTitleText } from \"../../styles/TextStyles\";\nimport { InputBase, InputButton, InputPopup } from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function setInputs(props) {\n  const Input = _ref => {\n    let {\n      item\n    } = _ref;\n    switch (item.type) {\n      case \"popup\":\n        return /*#__PURE__*/_jsxDEV(InputPopup, {\n          register: props.register,\n          data: item,\n          setValue: props.other\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this);\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(InputBase, {\n          register: props.register,\n          data: item,\n          errors: props.errors,\n          setValue: props.other\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      case \"button\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InputButton, {\n            register: props.register,\n            data: item,\n            placeholder: props === null || props === void 0 ? void 0 : props.placeHolder,\n            setPlaceholder: props === null || props === void 0 ? void 0 : props.setPlaceHolder,\n            setValue: props === null || props === void 0 ? void 0 : props.setValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n  return props.data.map((item, index) => /*#__PURE__*/_jsxDEV(InputOrderBox, {\n    theme: {\n      marginY: margin.l\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n}\nexport function setSingleInput(data, register, other) {\n  const Input = _ref2 => {\n    let {\n      item\n    } = _ref2;\n    switch (item.type) {\n      case \"popup\":\n        return /*#__PURE__*/_jsxDEV(InputPopup, {\n          register: register,\n          data: item,\n          setValue: other\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(InputBase, {\n          register: register,\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this);\n      case \"button\":\n        return /*#__PURE__*/_jsxDEV(InputButton, {\n          register: register,\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputOrderBox, {\n    children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      item: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n// switch (item.type) {\n//   case \"popup\":\n//     return (\n//       <InputPopup\n//         register={register}\n//         data={item}\n//         setOpenPopup={setPopup ? setPopup : null}\n//       />\n//     );\n//   case \"text\":\n//     return <InputBase register={register} data={item} errors={errors} />;\n//   case \"button\":\n//     return (\n//       <>\n//         <InputButton\n//           register={register}\n//           data={item}\n//           setOpenPopup={setPopup ? setPopup : null}\n//           getValues={getValues}\n//         />\n//       </>\n//     );\n//   default:\n//     return null;\n// }","map":{"version":3,"names":["margin","InputOrderBox","InputTitleText","InputBase","InputButton","InputPopup","setInputs","props","Input","item","type","register","other","errors","placeHolder","setPlaceHolder","setValue","data","map","index","marginY","l","title","setSingleInput"],"sources":["C:/foodngo/src/components/functions/setInputsToForm.tsx"],"sourcesContent":["import { InputsI } from \"../../models/Inputs\";\r\nimport { margin } from \"../../styles/Constants\";\r\nimport { InputOrderBox } from \"../../styles/Input\";\r\nimport { InputTitleText } from \"../../styles/TextStyles\";\r\nimport { InputBase, InputButton, InputPopup } from \"../Input\";\r\n\r\nexport function setInputs(props: any) {\r\n  const Input = ({ item }: any) => {\r\n    switch (item.type) {\r\n      case \"popup\":\r\n        return (\r\n          <InputPopup\r\n            register={props.register}\r\n            data={item}\r\n            setValue={props.other}\r\n          />\r\n        );\r\n      case \"text\":\r\n        return (\r\n          <InputBase\r\n            register={props.register}\r\n            data={item}\r\n            errors={props.errors}\r\n            setValue={props.other}\r\n          />\r\n        );\r\n      case \"button\":\r\n        return (\r\n          <>\r\n            <InputButton\r\n              register={props.register}\r\n              data={item}\r\n              placeholder={props?.placeHolder}\r\n              setPlaceholder={props?.setPlaceHolder}\r\n              setValue={props?.setValue}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return props.data.map((item: any, index: any) => (\r\n    <InputOrderBox theme={{ marginY: margin.l }}>\r\n      <InputTitleText>{item.title}</InputTitleText>\r\n      <Input item={item} />\r\n    </InputOrderBox>\r\n  ));\r\n}\r\n\r\nexport function setSingleInput(data: any, register: any, other?: any) {\r\n  const Input = ({ item }: any) => {\r\n    switch (item.type) {\r\n      case \"popup\":\r\n        return <InputPopup register={register} data={item} setValue={other} />;\r\n      case \"text\":\r\n        return <InputBase register={register} data={item} />;\r\n      case \"button\":\r\n        return <InputButton register={register} data={item} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  return (\r\n    <InputOrderBox>\r\n      <InputTitleText>{data.title}</InputTitleText>\r\n      <Input item={data} />\r\n    </InputOrderBox>\r\n  );\r\n}\r\n\r\n// switch (item.type) {\r\n//   case \"popup\":\r\n//     return (\r\n//       <InputPopup\r\n//         register={register}\r\n//         data={item}\r\n//         setOpenPopup={setPopup ? setPopup : null}\r\n//       />\r\n//     );\r\n//   case \"text\":\r\n//     return <InputBase register={register} data={item} errors={errors} />;\r\n//   case \"button\":\r\n//     return (\r\n//       <>\r\n//         <InputButton\r\n//           register={register}\r\n//           data={item}\r\n//           setOpenPopup={setPopup ? setPopup : null}\r\n//           getValues={getValues}\r\n//         />\r\n//       </>\r\n//     );\r\n//   default:\r\n//     return null;\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}