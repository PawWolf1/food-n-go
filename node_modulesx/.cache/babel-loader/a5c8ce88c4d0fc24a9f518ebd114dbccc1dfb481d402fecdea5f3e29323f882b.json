{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\nimport counterReducer from \"./data\";\nimport filtersReducer from \"./search\";\nimport foodReducer from \"./food\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nconst reducers = {\n  counter: counterReducer,\n  search: filtersReducer,\n  food: foodReducer\n};\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconfiler: autoMergeLevel2,\n  blacklist: [\"search\"]\n};\nconst rootReducer = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport function expConfigureStore() {\n  return configureStore({\n    reducer: persistedReducer,\n    devTools: process.env.NODE_ENV !== \"production\",\n    middleware: [thunk]\n  });\n}\nexport const persistor = persistStore(expConfigureStore());","map":{"version":3,"names":["combineReducers","configureStore","autoMergeLevel2","counterReducer","filtersReducer","foodReducer","persistStore","persistReducer","storage","thunk","reducers","counter","search","food","persistConfig","key","stateReconfiler","blacklist","rootReducer","persistedReducer","expConfigureStore","reducer","devTools","process","env","NODE_ENV","middleware","persistor"],"sources":["C:/foodngo/src/store/store.tsx"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\r\nimport counterReducer from \"./data\";\r\nimport filtersReducer from \"./search\";\r\nimport foodReducer from \"./food\";\r\n\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = {\r\n  counter: counterReducer,\r\n  search: filtersReducer,\r\n  food: foodReducer,\r\n};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  stateReconfiler: autoMergeLevel2,\r\n  blacklist: [\"search\"],\r\n};\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport function expConfigureStore() {\r\n  return configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n    middleware: [thunk],\r\n  });\r\n}\r\n\r\nexport const persistor = persistStore(expConfigureStore());\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,OAAOC,cAAc,MAAM,QAAQ;AACnC,OAAOC,cAAc,MAAM,UAAU;AACrC,OAAOC,WAAW,MAAM,QAAQ;AAEhC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAER,cAAc;EACvBS,MAAM,EAAER,cAAc;EACtBS,IAAI,EAAER;AACR,CAAC;AAED,MAAMS,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,eAAe,EAAEd,eAAe;EAChCe,SAAS,EAAE,CAAC,QAAQ;AACtB,CAAC;AAED,MAAMC,WAAW,GAAGlB,eAAe,CAACU,QAAQ,CAAC;AAC7C,MAAMS,gBAAgB,GAAGZ,cAAc,CAACO,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,SAASE,iBAAiB,GAAG;EAClC,OAAOnB,cAAc,CAAC;IACpBoB,OAAO,EAAEF,gBAAgB;IACzBG,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;IAC/CC,UAAU,EAAE,CAACjB,KAAK;EACpB,CAAC,CAAC;AACJ;AAEA,OAAO,MAAMkB,SAAS,GAAGrB,YAAY,CAACc,iBAAiB,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}