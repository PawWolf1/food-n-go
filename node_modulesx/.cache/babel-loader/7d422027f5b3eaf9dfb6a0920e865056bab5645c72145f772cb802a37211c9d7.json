{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\buttons\\\\MenuButtonsY.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LoginMenuButton } from \"../../styles/Buttons\";\nimport { SerifText } from \"../../styles/TextStyles\";\nimport { changeLanguage } from \"../functions/changeLanguage\";\nimport { chooseIcon } from \"../functions/getIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MenuButton = _ref => {\n  _s();\n  let {\n    label,\n    img,\n    nav,\n    onClick,\n    active\n  } = _ref;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoginMenuButton, {\n      onClick: () => nav ? navigate(`/${nav}`) : onClick(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: chooseIcon(img, \"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 6,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginLeft: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(SerifText, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), img === \"languages\" && active === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n        img: \"xD\",\n        label: \"Pl\",\n        onClick: () => changeLanguage(dispatch, \"pl\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuButton, {\n        img: \"xD\",\n        label: \"Eng\",\n        onClick: () => changeLanguage(dispatch, \"eng\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n_s(MenuButton, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = MenuButton;\nvar _c;\n$RefreshReg$(_c, \"MenuButton\");","map":{"version":3,"names":["useDispatch","useNavigate","LoginMenuButton","SerifText","changeLanguage","chooseIcon","MenuButton","label","img","nav","onClick","active","navigate","dispatch","flex","display","justifyContent","alignItems","marginLeft"],"sources":["C:/foodngo/src/components/buttons/MenuButtonsY.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LoginMenuButton } from \"../../styles/Buttons\";\r\nimport { SerifText } from \"../../styles/TextStyles\";\r\nimport { changeLanguage } from \"../functions/changeLanguage\";\r\nimport { chooseIcon } from \"../functions/getIcon\";\r\n\r\nexport const MenuButton = ({ label, img, nav, onClick, active }: any) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <LoginMenuButton onClick={() => (nav ? navigate(`/${nav}`) : onClick())}>\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {chooseIcon(img, \"\")}\r\n        </div>\r\n        <div\r\n          style={{\r\n            flex: 6,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginLeft: \"10px\",\r\n          }}\r\n        >\r\n          <SerifText>{label}</SerifText>\r\n        </div>\r\n      </LoginMenuButton>\r\n      {img === \"languages\" && active === true ? (\r\n        <>\r\n          <MenuButton\r\n            img={\"xD\"}\r\n            label={\"Pl\"}\r\n            onClick={() => changeLanguage(dispatch, \"pl\")}\r\n          />\r\n          <MenuButton\r\n            img={\"xD\"}\r\n            label={\"Eng\"}\r\n            onClick={() => changeLanguage(dispatch, \"eng\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,UAAU,QAAQ,sBAAsB;AAAC;AAAA;AAElD,OAAO,MAAMC,UAAU,GAAG,QAA+C;EAAA;EAAA,IAA9C;IAAEC,KAAK;IAAEC,GAAG;IAAEC,GAAG;IAAEC,OAAO;IAAEC;EAAY,CAAC;EAClE,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGb,WAAW,EAAE;EAC9B,oBACE;IAAA,wBACE,QAAC,eAAe;MAAC,OAAO,EAAE,MAAOS,GAAG,GAAGG,QAAQ,CAAE,IAAGH,GAAI,EAAC,CAAC,GAAGC,OAAO,EAAI;MAAA,wBACtE;QACE,KAAK,EAAE;UACLI,IAAI,EAAE,CAAC;UACPC,OAAO,EAAE,MAAM;UACfC,cAAc,EAAE,QAAQ;UACxBC,UAAU,EAAE;QACd,CAAE;QAAA,UAEDZ,UAAU,CAACG,GAAG,EAAE,EAAE;MAAC;QAAA;QAAA;QAAA;MAAA,QAChB,eACN;QACE,KAAK,EAAE;UACLM,IAAI,EAAE,CAAC;UACPC,OAAO,EAAE,MAAM;UACfE,UAAU,EAAE,QAAQ;UACpBC,UAAU,EAAE;QACd,CAAE;QAAA,uBAEF,QAAC,SAAS;UAAA,UAAEX;QAAK;UAAA;UAAA;UAAA;QAAA;MAAa;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACU,EACjBC,GAAG,KAAK,WAAW,IAAIG,MAAM,KAAK,IAAI,gBACrC;MAAA,wBACE,QAAC,UAAU;QACT,GAAG,EAAE,IAAK;QACV,KAAK,EAAE,IAAK;QACZ,OAAO,EAAE,MAAMP,cAAc,CAACS,QAAQ,EAAE,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C,eACF,QAAC,UAAU;QACT,GAAG,EAAE,IAAK;QACV,KAAK,EAAE,KAAM;QACb,OAAO,EAAE,MAAMT,cAAc,CAACS,QAAQ,EAAE,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA,gBACD,GACD,IAAI;EAAA,gBACP;AAEP,CAAC;AAAC,GA3CWP,UAAU;EAAA,QACJL,WAAW,EACXD,WAAW;AAAA;AAAA,KAFjBM,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}