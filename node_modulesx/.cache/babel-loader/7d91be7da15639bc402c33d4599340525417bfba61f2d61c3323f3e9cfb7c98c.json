{"ast":null,"code":"const initialState = {\n  cart: []\n};\n\n// Use the initialState as a default value\nexport default function cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // The reducer normally looks at the action type field to decide what happens\n  switch (action.type) {\n    case \"cartAdd\":\n      {\n        return {\n          ...state,\n          todos: [...state.cart, action.payload]\n        };\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type","todos","payload"],"sources":["C:/foodngo/src/store/cart.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Food } from \"../models/Food\";\r\nimport { FoodData } from \"../testData/FoodData\";\r\n\r\nexport interface CartI {\r\n  cart: Food[];\r\n}\r\n\r\nconst initialState: CartI = {\r\n  cart: [],\r\n};\r\n\r\n// Use the initialState as a default value\r\nexport default function cartReducer(state = initialState, action: any) {\r\n  // The reducer normally looks at the action type field to decide what happens\r\n  switch (action.type) {\r\n    case \"cartAdd\": {\r\n      return {\r\n        ...state,\r\n        todos: [...state.cart, action.payload],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAQA,MAAMA,YAAmB,GAAG;EAC1BC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,eAAe,SAASC,WAAW,GAAoC;EAAA,IAAnCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAW;EACnE;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MAAE;QACd,OAAO;UACL,GAAGF,KAAK;UACRG,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACF,IAAI,EAAEG,MAAM,CAACG,OAAO;QACvC,CAAC;MACH;IACA;MACE,OAAOJ,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}