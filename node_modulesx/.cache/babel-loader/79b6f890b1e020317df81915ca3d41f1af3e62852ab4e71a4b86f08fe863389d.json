{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ListList } from \"../testData/FoodData\";\nconst initialState = {\n  history: [],\n  myLists: ListList\n};\nexport const myListsSlice = createSlice({\n  name: \"myLists\",\n  initialState,\n  reducers: {\n    setMyLists: (state, action) => {\n      [state.myLists] = [action.payload];\n    },\n    addMyLists: (state, action) => {\n      [state.myLists] = [...state.myLists, action.payload];\n    },\n    setHistory: (state, action) => {\n      [state.history] = [action.payload];\n    },\n    deleteMyListElement: (state, action) => {\n      state.myLists = state.myLists.slice(0, action.payload).concat(state.myLists.slice(action.payload + 1));\n    }\n  }\n});\nexport const {\n  setMyLists,\n  setHistory,\n  deleteMyListElement\n} = myListsSlice.actions;\nexport default myListsSlice.reducer;","map":{"version":3,"names":["createSlice","ListList","initialState","history","myLists","myListsSlice","name","reducers","setMyLists","state","action","payload","addMyLists","setHistory","deleteMyListElement","slice","concat","actions","reducer"],"sources":["C:/foodngo/src/store/lists.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Food } from \"../models/Food\";\r\nimport { FoodData, ListList } from \"../testData/FoodData\";\r\n\r\nexport interface ListsI {\r\n  history: Food[];\r\n  myLists: [\r\n    {\r\n      food: Food[];\r\n      title: string;\r\n    }\r\n  ];\r\n}\r\n\r\nconst initialState: ListsI = {\r\n  history: [],\r\n  myLists: ListList,\r\n};\r\nexport const myListsSlice = createSlice({\r\n  name: \"myLists\",\r\n  initialState,\r\n  reducers: {\r\n    setMyLists: (state, action) => {\r\n      [state.myLists] = [action.payload];\r\n    },\r\n    addMyLists: (state, action) => {\r\n      [state.myLists] = [...state.myLists, action.payload];\r\n    },\r\n\r\n    setHistory: (state, action) => {\r\n      [state.history] = [action.payload];\r\n    },\r\n    deleteMyListElement: (state, action) => {\r\n      state.myLists = state.myLists\r\n        .slice(0, action.payload)\r\n        .concat(state.myLists.slice(action.payload + 1));\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMyLists, setHistory, deleteMyListElement } =\r\n  myListsSlice.actions;\r\n\r\nexport default myListsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAAmBC,QAAQ,QAAQ,sBAAsB;AAYzD,MAAMC,YAAoB,GAAG;EAC3BC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAEH;AACX,CAAC;AACD,OAAO,MAAMI,YAAY,GAAGL,WAAW,CAAC;EACtCM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,CAACD,KAAK,CAACL,OAAO,CAAC,GAAG,CAACM,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC;IACDC,UAAU,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7B,CAACD,KAAK,CAACL,OAAO,CAAC,GAAG,CAAC,GAAGK,KAAK,CAACL,OAAO,EAAEM,MAAM,CAACC,OAAO,CAAC;IACtD,CAAC;IAEDE,UAAU,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,CAACD,KAAK,CAACN,OAAO,CAAC,GAAG,CAACO,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC;IACDG,mBAAmB,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,CAC1BW,KAAK,CAAC,CAAC,EAAEL,MAAM,CAACC,OAAO,CAAC,CACxBK,MAAM,CAACP,KAAK,CAACL,OAAO,CAACW,KAAK,CAACL,MAAM,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;IACpD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,UAAU;EAAEK,UAAU;EAAEC;AAAoB,CAAC,GAC1DT,YAAY,CAACY,OAAO;AAEtB,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}