{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\forms\\\\FormNewList.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { newListData } from \"../../styles/Constants\";\nimport { setSingleInput } from \"../functions/setInputsToForm\";\nimport { Flex } from \"../../style\";\nimport { GrayButtonPopup } from \"../../styles/Buttons\";\nimport { getString } from \"../../locales/languages/string\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closePopup } from \"../../store/popup\";\nimport { apiFetchMyListsSend } from \"../../api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormInput = props => {\n  _s();\n  const {\n    cart\n  } = useSelector(state => state.cart);\n  const {\n    myLists\n  } = useSelector(state => state.lists);\n  const dispatch = useDispatch();\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n  const onSubmit = data => {\n    if (data.title) {\n      dispatch(closePopup());\n      setActive(false);\n      apiFetchMyListsSend({\n        food: cart,\n        title: getValues(\"title\"),\n        id: myLists.length + 1\n      }).then(result => {\n        setTimeout(() => {}, 1000);\n      }).catch(e => null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      marginLeft: \"10%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: setSingleInput(newListData.data[0], register)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(GrayButtonPopup, {\n        onClick: () => dispatch(closePopup()),\n        children: getString(\"buttons\", \"goBack\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrayButtonPopup, {\n        onClick: handleSubmit(onSubmit),\n        children: getString(\"buttons\", \"save\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"Lwy0vj9J2YDZM1+oXdNO2IkARqg=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useForm];\n});\n_c = FormInput;\nfunction setActive(arg0) {\n  throw new Error(\"Function not implemented.\");\n}\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["useForm","newListData","setSingleInput","Flex","GrayButtonPopup","getString","useDispatch","useSelector","closePopup","apiFetchMyListsSend","FormInput","props","cart","state","myLists","lists","dispatch","register","setValue","handleSubmit","getValues","formState","errors","control","onSubmit","data","title","setActive","food","id","length","then","result","setTimeout","catch","e","width","marginLeft","arg0","Error"],"sources":["C:/foodngo/src/components/forms/FormNewList.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { newListData } from \"../../styles/Constants\";\r\nimport { setSingleInput } from \"../functions/setInputsToForm\";\r\nimport { Flex } from \"../../style\";\r\nimport { GrayButtonPopup } from \"../../styles/Buttons\";\r\nimport { getString } from \"../../locales/languages/string\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closePopup } from \"../../store/popup\";\r\nimport { addMyLists } from \"../../store/lists\";\r\nimport { apiFetchMyListsSend } from \"../../api\";\r\nimport { setLoading } from \"../../store/loading\";\r\n\r\nexport const FormInput = (props: any) => {\r\n  const { cart } = useSelector((state: any) => state.cart);\r\n  const { myLists } = useSelector((state: any) => state.lists);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n  const onSubmit = (data: any) => {\r\n    if (data.title) {\r\n      dispatch(closePopup());\r\n\r\n      setActive(false);\r\n      apiFetchMyListsSend({\r\n        food: cart,\r\n        title: getValues(\"title\"),\r\n        id: myLists.length + 1,\r\n      })\r\n        .then((result: any) => {\r\n          setTimeout(() => {}, 1000);\r\n        })\r\n        .catch((e: any) => null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"80%\", marginLeft: \"10%\" }}>\r\n      <>{setSingleInput(newListData.data[0], register)}</>\r\n      <Flex>\r\n        <GrayButtonPopup onClick={() => dispatch(closePopup())}>\r\n          {getString(\"buttons\", \"goBack\")}\r\n        </GrayButtonPopup>\r\n        <GrayButtonPopup onClick={handleSubmit(onSubmit)}>\r\n          {getString(\"buttons\", \"save\")}\r\n        </GrayButtonPopup>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\nfunction setActive(arg0: boolean) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,SAASC,mBAAmB,QAAQ,WAAW;AAAC;AAAA;AAGhD,OAAO,MAAMC,SAAS,GAAIC,KAAU,IAAK;EAAA;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAGL,WAAW,CAAEM,KAAU,IAAKA,KAAK,CAACD,IAAI,CAAC;EACxD,MAAM;IAAEE;EAAQ,CAAC,GAAGP,WAAW,CAAEM,KAAU,IAAKA,KAAK,CAACE,KAAK,CAAC;EAC5D,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM;IACJW,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO,CAAC;IACrBC;EACF,CAAC,GAAGvB,OAAO,EAAE;EACb,MAAMwB,QAAQ,GAAIC,IAAS,IAAK;IAC9B,IAAIA,IAAI,CAACC,KAAK,EAAE;MACdV,QAAQ,CAACR,UAAU,EAAE,CAAC;MAEtBmB,SAAS,CAAC,KAAK,CAAC;MAChBlB,mBAAmB,CAAC;QAClBmB,IAAI,EAAEhB,IAAI;QACVc,KAAK,EAAEN,SAAS,CAAC,OAAO,CAAC;QACzBS,EAAE,EAAEf,OAAO,CAACgB,MAAM,GAAG;MACvB,CAAC,CAAC,CACCC,IAAI,CAAEC,MAAW,IAAK;QACrBC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAM,IAAK,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAM,CAAE;IAAA,wBAC9C;MAAA,UAAGnC,cAAc,CAACD,WAAW,CAACwB,IAAI,CAAC,CAAC,CAAC,EAAER,QAAQ;IAAC,iBAAI,eACpD,QAAC,IAAI;MAAA,wBACH,QAAC,eAAe;QAAC,OAAO,EAAE,MAAMD,QAAQ,CAACR,UAAU,EAAE,CAAE;QAAA,UACpDH,SAAS,CAAC,SAAS,EAAE,QAAQ;MAAC;QAAA;QAAA;QAAA;MAAA,QACf,eAClB,QAAC,eAAe;QAAC,OAAO,EAAEc,YAAY,CAACK,QAAQ,CAAE;QAAA,UAC9CnB,SAAS,CAAC,SAAS,EAAE,MAAM;MAAC;QAAA;QAAA;QAAA;MAAA,QACb;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA1CWK,SAAS;EAAA,QACHH,WAAW,EACRA,WAAW,EACdD,WAAW,EAQxBN,OAAO;AAAA;AAAA,KAXAU,SAAS;AA2CtB,SAASiB,SAAS,CAACW,IAAa,EAAE;EAChC,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}