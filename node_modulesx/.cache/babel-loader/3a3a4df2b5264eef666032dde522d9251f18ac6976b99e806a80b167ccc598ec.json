{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\screens\\\\MyLists.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { apiFetchMyLists } from \"../api\";\nimport { MainBody } from \"../components/MainBody\";\nimport { MyListsSub } from \"../components/subScreens/MyListsSub\";\nimport { setMyLists } from \"../store/lists\";\nimport { setLoading } from \"../store/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyListsScr = () => {\n  _s();\n  const [errors, setErrors] = useState([]);\n  const {\n    loading\n  } = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setLoading(true));\n    apiFetchMyLists().then(result => {\n      if (result.myLists !== null) {\n        dispatch(setMyLists(result.myLists));\n        // dispatch(reset());\n      }\n\n      setTimeout(() => {\n        dispatch(setLoading(false));\n      }, 1000);\n    }).catch(e => setErrors(e));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainBody, {\n    children: /*#__PURE__*/_jsxDEV(MyListsSub, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MyListsScr, \"4DTKynijYVvR5mY+zdJYH67uDT0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MyListsScr;\nvar _c;\n$RefreshReg$(_c, \"MyListsScr\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","apiFetchMyLists","MainBody","MyListsSub","setMyLists","setLoading","MyListsScr","errors","setErrors","loading","state","dispatch","then","result","myLists","setTimeout","catch","e"],"sources":["C:/foodngo/src/screens/MyLists.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { apiFetchFood, apiFetchMyLists } from \"../api\";\r\nimport { MainBody } from \"../components/MainBody\";\r\nimport { MyListsSub } from \"../components/subScreens/MyListsSub\";\r\nimport { setFood } from \"../store/food\";\r\nimport { setMyLists } from \"../store/lists\";\r\nimport { setLoading } from \"../store/loading\";\r\n\r\nexport const MyListsScr = () => {\r\n  const [errors, setErrors] = useState([]);\r\n  const { loading } = useSelector((state: any) => state.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setLoading(true));\r\n    apiFetchMyLists()\r\n      .then((result) => {\r\n        if (result.myLists !== null) {\r\n          dispatch(setMyLists(result.myLists));\r\n          // dispatch(reset());\r\n        }\r\n        setTimeout(() => {\r\n          dispatch(setLoading(false));\r\n        }, 1000);\r\n      })\r\n      .catch((e) => setErrors(e));\r\n  }, []);\r\n  return (\r\n    <MainBody>\r\n      <MyListsSub />\r\n    </MainBody>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAuBC,eAAe,QAAQ,QAAQ;AACtD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,UAAU,QAAQ,qCAAqC;AAEhE,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAE9C,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEY;EAAQ,CAAC,GAAGV,WAAW,CAAEW,KAAU,IAAKA,KAAK,CAACD,OAAO,CAAC;EAC9D,MAAME,QAAQ,GAAGX,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACda,QAAQ,CAACN,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1BJ,eAAe,EAAE,CACdW,IAAI,CAAEC,MAAM,IAAK;MAChB,IAAIA,MAAM,CAACC,OAAO,KAAK,IAAI,EAAE;QAC3BH,QAAQ,CAACP,UAAU,CAACS,MAAM,CAACC,OAAO,CAAC,CAAC;QACpC;MACF;;MACAC,UAAU,CAAC,MAAM;QACfJ,QAAQ,CAACN,UAAU,CAAC,KAAK,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,CACDW,KAAK,CAAEC,CAAC,IAAKT,SAAS,CAACS,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACN,oBACE,QAAC,QAAQ;IAAA,uBACP,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACL;AAEf,CAAC;AAAC,GAxBWX,UAAU;EAAA,QAEDP,WAAW,EACdC,WAAW;AAAA;AAAA,KAHjBM,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}