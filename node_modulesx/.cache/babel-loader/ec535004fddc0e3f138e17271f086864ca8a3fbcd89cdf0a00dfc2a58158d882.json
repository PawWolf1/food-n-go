{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\functions\\\\setInputsToForm.tsx\";\nimport { margin } from \"../../styles/Constants\";\nimport { InputOrderBox } from \"../../styles/Input\";\nimport { InputTitleText } from \"../../styles/TextStyles\";\nimport { InputBase, InputButton, InputPopup } from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function setInputs(data, register, getValues, errors) {\n  const Input = _ref => {\n    let {\n      item\n    } = _ref;\n    switch (item.type) {\n      case \"popup\":\n        return /*#__PURE__*/_jsxDEV(InputPopup, {\n          register: register,\n          data: item,\n          setOpenPopup: setPopup ? setPopup : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(InputBase, {\n          register: register,\n          data: item,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      case \"button\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InputButton, {\n            register: register,\n            data: item,\n            setOpenPopup: setPopup ? setPopup : null,\n            getValues: getValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n  return data.data.map((item, index) => /*#__PURE__*/_jsxDEV(InputOrderBox, {\n    theme: {\n      marginY: margin.l\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n}\nexport function setSingleInput(data, register) {\n  const Input = _ref2 => {\n    let {\n      item\n    } = _ref2;\n    switch (item.type) {\n      case \"popup\":\n        return /*#__PURE__*/_jsxDEV(InputPopup, {\n          register: register,\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      case \"text\":\n        return /*#__PURE__*/_jsxDEV(InputBase, {\n          register: register,\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      case \"button\":\n        return /*#__PURE__*/_jsxDEV(InputButton, {\n          register: register,\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputOrderBox, {\n    children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      item: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["margin","InputOrderBox","InputTitleText","InputBase","InputButton","InputPopup","setInputs","data","register","getValues","errors","Input","item","type","setPopup","map","index","marginY","l","title","setSingleInput"],"sources":["C:/foodngo/src/components/functions/setInputsToForm.tsx"],"sourcesContent":["import { InputsI } from \"../../models/Inputs\";\r\nimport { margin } from \"../../styles/Constants\";\r\nimport { InputOrderBox } from \"../../styles/Input\";\r\nimport { InputTitleText } from \"../../styles/TextStyles\";\r\nimport { InputBase, InputButton, InputPopup } from \"../Input\";\r\n\r\nexport function setInputs(\r\n  data: InputsI,\r\n  register: any,\r\n  getValues?: any,\r\n  errors?: any\r\n) {\r\n  const Input = ({ item }: any) => {\r\n    switch (item.type) {\r\n      case \"popup\":\r\n        return (\r\n          <InputPopup\r\n            register={register}\r\n            data={item}\r\n            setOpenPopup={setPopup ? setPopup : null}\r\n          />\r\n        );\r\n      case \"text\":\r\n        return <InputBase register={register} data={item} errors={errors} />;\r\n      case \"button\":\r\n        return (\r\n          <>\r\n            <InputButton\r\n              register={register}\r\n              data={item}\r\n              setOpenPopup={setPopup ? setPopup : null}\r\n              getValues={getValues}\r\n            />\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return data.data.map((item, index) => (\r\n    <InputOrderBox theme={{ marginY: margin.l }}>\r\n      <InputTitleText>{item.title}</InputTitleText>\r\n      <Input item={item} />\r\n    </InputOrderBox>\r\n  ));\r\n}\r\n\r\nexport function setSingleInput(data: any, register: any) {\r\n  const Input = ({ item }: any) => {\r\n    switch (item.type) {\r\n      case \"popup\":\r\n        return <InputPopup register={register} data={item} />;\r\n      case \"text\":\r\n        return <InputBase register={register} data={item} />;\r\n      case \"button\":\r\n        return <InputButton register={register} data={item} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  return (\r\n    <InputOrderBox>\r\n      <InputTitleText>{data.title}</InputTitleText>\r\n      <Input item={data} />\r\n    </InputOrderBox>\r\n  );\r\n}\r\n"],"mappings":";AACA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,UAAU;AAAC;AAAA;AAE9D,OAAO,SAASC,SAAS,CACvBC,IAAa,EACbC,QAAa,EACbC,SAAe,EACfC,MAAY,EACZ;EACA,MAAMC,KAAK,GAAG,QAAmB;IAAA,IAAlB;MAAEC;IAAU,CAAC;IAC1B,QAAQA,IAAI,CAACC,IAAI;MACf,KAAK,OAAO;QACV,oBACE,QAAC,UAAU;UACT,QAAQ,EAAEL,QAAS;UACnB,IAAI,EAAEI,IAAK;UACX,YAAY,EAAEE,QAAQ,GAAGA,QAAQ,GAAG;QAAK;UAAA;UAAA;UAAA;QAAA,QACzC;MAEN,KAAK,MAAM;QACT,oBAAO,QAAC,SAAS;UAAC,QAAQ,EAAEN,QAAS;UAAC,IAAI,EAAEI,IAAK;UAAC,MAAM,EAAEF;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG;MACtE,KAAK,QAAQ;QACX,oBACE;UAAA,uBACE,QAAC,WAAW;YACV,QAAQ,EAAEF,QAAS;YACnB,IAAI,EAAEI,IAAK;YACX,YAAY,EAAEE,QAAQ,GAAGA,QAAQ,GAAG,IAAK;YACzC,SAAS,EAAEL;UAAU;YAAA;YAAA;YAAA;UAAA;QACrB,iBACD;MAEP;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EAED,OAAOF,IAAI,CAACA,IAAI,CAACQ,GAAG,CAAC,CAACH,IAAI,EAAEI,KAAK,kBAC/B,QAAC,aAAa;IAAC,KAAK,EAAE;MAAEC,OAAO,EAAEjB,MAAM,CAACkB;IAAE,CAAE;IAAA,wBAC1C,QAAC,cAAc;MAAA,UAAEN,IAAI,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7C,QAAC,KAAK;MAAC,IAAI,EAAEP;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAExB,CAAC;AACJ;AAEA,OAAO,SAASQ,cAAc,CAACb,IAAS,EAAEC,QAAa,EAAE;EACvD,MAAMG,KAAK,GAAG,SAAmB;IAAA,IAAlB;MAAEC;IAAU,CAAC;IAC1B,QAAQA,IAAI,CAACC,IAAI;MACf,KAAK,OAAO;QACV,oBAAO,QAAC,UAAU;UAAC,QAAQ,EAAEL,QAAS;UAAC,IAAI,EAAEI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MACvD,KAAK,MAAM;QACT,oBAAO,QAAC,SAAS;UAAC,QAAQ,EAAEJ,QAAS;UAAC,IAAI,EAAEI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MACtD,KAAK,QAAQ;QACX,oBAAO,QAAC,WAAW;UAAC,QAAQ,EAAEJ,QAAS;UAAC,IAAI,EAAEI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG;MACxD;QACE,OAAO,IAAI;IAAC;EAElB,CAAC;EACD,oBACE,QAAC,aAAa;IAAA,wBACZ,QAAC,cAAc;MAAA,UAAEL,IAAI,CAACY;IAAK;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7C,QAAC,KAAK;MAAC,IAAI,EAAEZ;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}