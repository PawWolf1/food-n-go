{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\HomeSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FoodTile } from \"../../models/FoodComp\";\nimport { GridBox } from \"../../style\";\nimport { CartBox } from \"../../styles/CartBox\";\nimport { CartSlider } from \"../CartSlider\";\nimport { getWindowSize } from \"../functions/getWindowSize\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { sortFoodBy } from \"../functions/sortFoodBy\";\nimport { popupBlock } from \"../PopupBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomeSub = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [cart, setCart] = useState(data ? data.item : []);\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  const [popup, setPopup] = useState({});\n  const filters = useSelector(state => state.search);\n  const food = useSelector(state => state.food.food);\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  function functionOn() {\n    setCart([]);\n    setPopup({\n      isActive: false\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [popupBlock({\n      popup,\n      setPopup,\n      functionOn: functionOn\n    }), /*#__PURE__*/_jsxDEV(GridBox, {\n      theme: {\n        width: windowSize.innerWidth\n      },\n      children: sortFoodBy(food, filters).map((data, index) => FoodTile(data, setCart))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartBox, {\n      theme: {\n        img: require(\"../../locales/images/foodBg1.png\"),\n        width: windowSize.innerWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(CartSlider, {\n        cart: cart,\n        setCart: setCart,\n        mode: \"cart\",\n        setPopup: setPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomeSub, \"HnbAdOjNJs5pVBAV/FSLPWD9Ge8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = HomeSub;\nvar _c;\n$RefreshReg$(_c, \"HomeSub\");","map":{"version":3,"names":["useState","useEffect","useSelector","FoodTile","GridBox","CartBox","CartSlider","getWindowSize","moveCartSlider","sortFoodBy","popupBlock","HomeSub","data","cart","setCart","item","windowSize","setWindowSize","popup","setPopup","filters","state","search","food","handleWindowResize","window","addEventListener","length","removeEventListener","functionOn","isActive","width","innerWidth","map","index","img","require"],"sources":["C:/foodngo/src/components/subScreens/HomeSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LogoImg } from \"../../locales/images/logo\";\r\nimport { getString } from \"../../locales/languages/string\";\r\nimport { Food } from \"../../models/Food\";\r\nimport { FoodTile } from \"../../models/FoodComp\";\r\nimport { increment } from \"../../store/data\";\r\nimport { GridBox } from \"../../style\";\r\nimport { CartBox } from \"../../styles/CartBox\";\r\nimport { FoodData } from \"../../testData/FoodData\";\r\nimport { CartSlider } from \"../CartSlider\";\r\nimport { getWindowSize } from \"../functions/getWindowSize\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { sortFoodBy } from \"../functions/sortFoodBy\";\r\nimport { popupBlock } from \"../PopupBlock\";\r\n\r\nexport const HomeSub = ({ data }: any) => {\r\n  const [cart, setCart] = useState<Food[]>(data ? data.item : []);\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n  const [popup, setPopup] = useState({});\r\n  const filters = useSelector((state: any) => state.search);\r\n  const food = useSelector((state: any) => state.food.food);\r\n\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  function functionOn() {\r\n    setCart([]);\r\n    setPopup({\r\n      isActive: false,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {popupBlock({\r\n        popup,\r\n        setPopup,\r\n        functionOn: functionOn,\r\n      })}\r\n      <GridBox\r\n        theme={{\r\n          width: windowSize.innerWidth,\r\n        }}\r\n      >\r\n        {sortFoodBy(food, filters).map((data: any, index: number) =>\r\n          FoodTile(data, setCart)\r\n        )}\r\n      </GridBox>\r\n      <CartBox\r\n        theme={{\r\n          img: require(\"../../locales/images/foodBg1.png\"),\r\n          width: windowSize.innerWidth,\r\n        }}\r\n      >\r\n        <CartSlider\r\n          cart={cart}\r\n          setCart={setCart}\r\n          mode={\"cart\"}\r\n          setPopup={setPopup}\r\n        />\r\n      </CartBox>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAsBC,WAAW,QAAQ,aAAa;AAItD,SAASC,QAAQ,QAAQ,uBAAuB;AAEhD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,sBAAsB;AAE9C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,eAAe;AAAC;AAAA;AAE3C,OAAO,MAAMC,OAAO,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAASY,IAAI,GAAGA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAC;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAACO,aAAa,EAAE,CAAC;EAC7D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAMoB,OAAO,GAAGlB,WAAW,CAAEmB,KAAU,IAAKA,KAAK,CAACC,MAAM,CAAC;EACzD,MAAMC,IAAI,GAAGrB,WAAW,CAAEmB,KAAU,IAAKA,KAAK,CAACE,IAAI,CAACA,IAAI,CAAC;EAEzDtB,SAAS,CAAC,MAAM;IACd,SAASuB,kBAAkB,GAAG;MAC5BP,aAAa,CAACV,aAAa,EAAE,CAAC;IAChC;IAEAkB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;IACrDhB,cAAc,CAACK,IAAI,CAACc,MAAM,CAAC;IAC3B,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,kBAAkB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,SAASgB,UAAU,GAAG;IACpBf,OAAO,CAAC,EAAE,CAAC;IACXK,QAAQ,CAAC;MACPW,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,WACGpB,UAAU,CAAC;MACVQ,KAAK;MACLC,QAAQ;MACRU,UAAU,EAAEA;IACd,CAAC,CAAC,eACF,QAAC,OAAO;MACN,KAAK,EAAE;QACLE,KAAK,EAAEf,UAAU,CAACgB;MACpB,CAAE;MAAA,UAEDvB,UAAU,CAACc,IAAI,EAAEH,OAAO,CAAC,CAACa,GAAG,CAAC,CAACrB,IAAS,EAAEsB,KAAa,KACtD/B,QAAQ,CAACS,IAAI,EAAEE,OAAO,CAAC;IACxB;MAAA;MAAA;MAAA;IAAA,QACO,eACV,QAAC,OAAO;MACN,KAAK,EAAE;QACLqB,GAAG,EAAEC,OAAO,CAAC,kCAAkC,CAAC;QAChDL,KAAK,EAAEf,UAAU,CAACgB;MACpB,CAAE;MAAA,uBAEF,QAAC,UAAU;QACT,IAAI,EAAEnB,IAAK;QACX,OAAO,EAAEC,OAAQ;QACjB,IAAI,EAAE,MAAO;QACb,QAAQ,EAAEK;MAAS;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACM;EAAA,gBACT;AAEP,CAAC;AAAC,GAzDWR,OAAO;EAAA,QAIFT,WAAW,EACdA,WAAW;AAAA;AAAA,KALbS,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}