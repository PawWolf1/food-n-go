{"ast":null,"code":"export function sortFoodBy(food, filtersData) {\n  const {\n    type,\n    inOrder\n  } = filtersData.sortBy;\n  const {\n    filters\n  } = filtersData;\n  function sortBy() {\n    switch (type) {\n      case \"price\":\n      // return food.sort((a, b) =>\n      //   !inOrder ? a.price - b.price : b.price - a.price\n      // );\n      case \"name\":\n        return food.sort(function (a, b) {\n          if (a.name < b.name && inOrder || b.name < a.name && !inOrder) {\n            return -1;\n          }\n          if (a.name > b.name && inOrder || b.name > a.name && !inOrder) {\n            return 1;\n          }\n          return 0;\n        });\n      default:\n        return food;\n    }\n  }\n  function filterBy(list) {\n    let conditions = filters.filter(function isBigEnough(item) {\n      return item.choosen === true && item.blocked === false;\n    }).map(item => item.name);\n    let blockades = filters.filter(function isBigEnough(item) {\n      return item.choosen === true && item.blocked === true;\n    }).map(item => item.name);\n    let result = list.filter(function isBigEnough(item) {\n      return conditions.some(el => item.category.includes(el)) === true;\n    });\n    let block = result.filter(function isBigEnough(item) {\n      return blockades.some(el => item.category.includes(el)) === false;\n    });\n    return block;\n  }\n  let list = sortBy();\n  return filterBy(food);\n}\n\n// function filterBy(list: any) {\n//   let x = list.filter(function isBigEnough(item: any) {\n//     let xx = item.category;\n//     return xx.includes(\"Exotic\") ? item : null;\n//   });\n//   return x;\n// }\n\n// conditions.some((el: any) => item.category.includes(el))","map":{"version":3,"names":["sortFoodBy","food","filtersData","type","inOrder","sortBy","filters","sort","a","b","name","filterBy","list","conditions","filter","isBigEnough","item","choosen","blocked","map","blockades","result","some","el","category","includes","block"],"sources":["C:/foodngo/src/components/functions/sortFoodBy.tsx"],"sourcesContent":["import { Food } from \"../../models/Food\";\r\n\r\nexport function sortFoodBy(food: Food[], filtersData: any) {\r\n  const { type, inOrder } = filtersData.sortBy;\r\n  const { filters } = filtersData;\r\n  function sortBy() {\r\n    switch (type) {\r\n      case \"price\":\r\n      // return food.sort((a, b) =>\r\n      //   !inOrder ? a.price - b.price : b.price - a.price\r\n      // );\r\n      case \"name\":\r\n        return food.sort(function (a, b) {\r\n          if ((a.name < b.name && inOrder) || (b.name < a.name && !inOrder)) {\r\n            return -1;\r\n          }\r\n          if ((a.name > b.name && inOrder) || (b.name > a.name && !inOrder)) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      default:\r\n        return food;\r\n    }\r\n  }\r\n  function filterBy(list: any) {\r\n    let conditions = filters\r\n      .filter(function isBigEnough(item: any) {\r\n        return item.choosen === true && item.blocked === false;\r\n      })\r\n      .map((item: any) => item.name);\r\n    let blockades = filters\r\n      .filter(function isBigEnough(item: any) {\r\n        return item.choosen === true && item.blocked === true;\r\n      })\r\n      .map((item: any) => item.name);\r\n    let result = list.filter(function isBigEnough(item: any) {\r\n      return conditions.some((el: any) => item.category.includes(el)) === true;\r\n    });\r\n    let block = result.filter(function isBigEnough(item: any) {\r\n      return blockades.some((el: any) => item.category.includes(el)) === false;\r\n    });\r\n\r\n    return block;\r\n  }\r\n  let list = sortBy();\r\n  return filterBy(food);\r\n}\r\n\r\n// function filterBy(list: any) {\r\n//   let x = list.filter(function isBigEnough(item: any) {\r\n//     let xx = item.category;\r\n//     return xx.includes(\"Exotic\") ? item : null;\r\n//   });\r\n//   return x;\r\n// }\r\n\r\n// conditions.some((el: any) => item.category.includes(el))\r\n"],"mappings":"AAEA,OAAO,SAASA,UAAU,CAACC,IAAY,EAAEC,WAAgB,EAAE;EACzD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,WAAW,CAACG,MAAM;EAC5C,MAAM;IAAEC;EAAQ,CAAC,GAAGJ,WAAW;EAC/B,SAASG,MAAM,GAAG;IAChB,QAAQF,IAAI;MACV,KAAK,OAAO;MACZ;MACA;MACA;MACA,KAAK,MAAM;QACT,OAAOF,IAAI,CAACM,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAC/B,IAAKD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,IAAIN,OAAO,IAAMK,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,IAAI,CAACN,OAAQ,EAAE;YACjE,OAAO,CAAC,CAAC;UACX;UACA,IAAKI,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,IAAIN,OAAO,IAAMK,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,IAAI,CAACN,OAAQ,EAAE;YACjE,OAAO,CAAC;UACV;UACA,OAAO,CAAC;QACV,CAAC,CAAC;MACJ;QACE,OAAOH,IAAI;IAAC;EAElB;EACA,SAASU,QAAQ,CAACC,IAAS,EAAE;IAC3B,IAAIC,UAAU,GAAGP,OAAO,CACrBQ,MAAM,CAAC,SAASC,WAAW,CAACC,IAAS,EAAE;MACtC,OAAOA,IAAI,CAACC,OAAO,KAAK,IAAI,IAAID,IAAI,CAACE,OAAO,KAAK,KAAK;IACxD,CAAC,CAAC,CACDC,GAAG,CAAEH,IAAS,IAAKA,IAAI,CAACN,IAAI,CAAC;IAChC,IAAIU,SAAS,GAAGd,OAAO,CACpBQ,MAAM,CAAC,SAASC,WAAW,CAACC,IAAS,EAAE;MACtC,OAAOA,IAAI,CAACC,OAAO,KAAK,IAAI,IAAID,IAAI,CAACE,OAAO,KAAK,IAAI;IACvD,CAAC,CAAC,CACDC,GAAG,CAAEH,IAAS,IAAKA,IAAI,CAACN,IAAI,CAAC;IAChC,IAAIW,MAAM,GAAGT,IAAI,CAACE,MAAM,CAAC,SAASC,WAAW,CAACC,IAAS,EAAE;MACvD,OAAOH,UAAU,CAACS,IAAI,CAAEC,EAAO,IAAKP,IAAI,CAACQ,QAAQ,CAACC,QAAQ,CAACF,EAAE,CAAC,CAAC,KAAK,IAAI;IAC1E,CAAC,CAAC;IACF,IAAIG,KAAK,GAAGL,MAAM,CAACP,MAAM,CAAC,SAASC,WAAW,CAACC,IAAS,EAAE;MACxD,OAAOI,SAAS,CAACE,IAAI,CAAEC,EAAO,IAAKP,IAAI,CAACQ,QAAQ,CAACC,QAAQ,CAACF,EAAE,CAAC,CAAC,KAAK,KAAK;IAC1E,CAAC,CAAC;IAEF,OAAOG,KAAK;EACd;EACA,IAAId,IAAI,GAAGP,MAAM,EAAE;EACnB,OAAOM,QAAQ,CAACV,IAAI,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}