{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\CartFood.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { CartFoodElement, FlexPart, SmallImg } from \"../style\";\nimport { SerifTextS } from \"../styles/TextStyles\";\nimport { FoodPhotoButton } from \"./buttons/FoodPhotoButtons\";\nimport { cutText } from \"./functions/cutText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartFood = _ref => {\n  _s();\n  let {\n    data,\n    cart,\n    index,\n    number,\n    setCart\n  } = _ref;\n  const [amount, setAmount] = useState(data.amount);\n  let value = number * amount;\n  function changeAmountPlus(amount) {\n    if (number < 99) {\n      setAmount(number + amount);\n      let newData = [...cart];\n      newData[index].amount = number + amount;\n      setCart(newData);\n    }\n  }\n  function changeAmountMinus(amount) {\n    if (number <= 0) {\n      setCart(cart.filter(item => item !== data));\n    } else {\n      setAmount(number - amount);\n      let newData = [...cart];\n      newData[index].amount = number - amount;\n      setCart(newData);\n    }\n  }\n  function deleteFood() {\n    setCart(cart.filter(item => item !== data));\n  }\n  return /*#__PURE__*/_jsxDEV(CartFoodElement, {\n    children: [/*#__PURE__*/_jsxDEV(FlexPart, {\n      theme: 1,\n      children: /*#__PURE__*/_jsxDEV(SmallImg, {\n        alt: \"No img?\",\n        src: data.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexPart, {\n      theme: 3,\n      children: /*#__PURE__*/_jsxDEV(SerifTextS, {\n        children: [cutText(data.name, 8), \" x\", number, \" \", value.toFixed(2), \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexPart, {\n      theme: 3,\n      children: [/*#__PURE__*/_jsxDEV(FoodPhotoButton, {\n        icon: \"delete\",\n        sqr: true,\n        onClick: () => deleteFood(),\n        size: `24px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FoodPhotoButton, {\n        icon: \"minus\",\n        sqr: true,\n        onClick: () => changeAmountMinus(1),\n        size: `24px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FoodPhotoButton, {\n        icon: \"plus\",\n        sqr: true,\n        onClick: () => changeAmountPlus(1),\n        size: `24px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, data.id.toString(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CartFood, \"fBzFEj+RtTP5YvNyWtb6Tj5lWTk=\");\n_c = CartFood;\nvar _c;\n$RefreshReg$(_c, \"CartFood\");","map":{"version":3,"names":["useState","CartFoodElement","FlexPart","SmallImg","SerifTextS","FoodPhotoButton","cutText","CartFood","data","cart","index","number","setCart","amount","setAmount","value","changeAmountPlus","newData","changeAmountMinus","filter","item","deleteFood","imageUrl","name","toFixed","id","toString"],"sources":["C:/foodngo/src/components/CartFood.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { colors, rawColors } from \"../locales/colors\";\r\nimport { DeleteImg } from \"../locales/images/delete\";\r\nimport { Food } from \"../models/Food\";\r\nimport { CartFoodElement, FlexPart, SmallImg } from \"../style\";\r\nimport { SerifText, SerifTextS } from \"../styles/TextStyles\";\r\nimport { FoodPhotoButton } from \"./buttons/FoodPhotoButtons\";\r\nimport { cutText } from \"./functions/cutText\";\r\n\r\nexport const CartFood = ({ data, cart, index, number, setCart }: any) => {\r\n  const [amount, setAmount] = useState<number>(data.amount);\r\n  let value = number * amount;\r\n\r\n  function changeAmountPlus(amount: number) {\r\n    if (number < 99) {\r\n      setAmount(number + amount);\r\n      let newData = [...cart];\r\n      newData[index].amount = number + amount;\r\n      setCart(newData);\r\n    }\r\n  }\r\n\r\n  function changeAmountMinus(amount: number) {\r\n    if (number <= 0) {\r\n      setCart(cart.filter((item: any) => item !== data));\r\n    } else {\r\n      setAmount(number - amount);\r\n      let newData = [...cart];\r\n      newData[index].amount = number - amount;\r\n      setCart(newData);\r\n    }\r\n  }\r\n\r\n  function deleteFood() {\r\n    setCart(cart.filter((item: any) => item !== data));\r\n  }\r\n\r\n  return (\r\n    <CartFoodElement key={data.id.toString()}>\r\n      <FlexPart theme={1}>\r\n        <SmallImg alt=\"No img?\" src={data.imageUrl} />\r\n      </FlexPart>\r\n      <FlexPart theme={3}>\r\n        <SerifTextS>\r\n          {cutText(data.name, 8)} x{number} {value.toFixed(2)}$\r\n        </SerifTextS>\r\n      </FlexPart>\r\n      <FlexPart theme={3}>\r\n        <FoodPhotoButton\r\n          icon={\"delete\"}\r\n          sqr={true}\r\n          onClick={() => deleteFood()}\r\n          size={`24px`}\r\n        />\r\n        <FoodPhotoButton\r\n          icon={\"minus\"}\r\n          sqr={true}\r\n          onClick={() => changeAmountMinus(1)}\r\n          size={`24px`}\r\n        />\r\n        <FoodPhotoButton\r\n          icon={\"plus\"}\r\n          sqr={true}\r\n          onClick={() => changeAmountPlus(1)}\r\n          size={`24px`}\r\n        />\r\n      </FlexPart>\r\n    </CartFoodElement>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}