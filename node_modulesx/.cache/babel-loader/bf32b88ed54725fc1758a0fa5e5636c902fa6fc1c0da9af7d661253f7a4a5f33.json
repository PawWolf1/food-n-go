{"ast":null,"code":"const initialState = {\n  cart: []\n};\n\n// Use the initialState as a default value\nexport default function cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // The reducer normally looks at the action type field to decide what happens\n  switch (action.type) {\n    case \"todos/todoAdded\":\n      {\n        // We need to return a new state object\n        return {\n          // that has all the existing state data\n          ...state\n          // but has a new array for the `todos` field\n        };\n      }\n    // Do something here based on the different types of actions\n    default:\n      // If this reducer doesn't recognize the action type, or doesn't\n      // care about this specific action, return the existing state unchanged\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","cart","cartReducer","state","action","type"],"sources":["C:/foodngo/src/store/cart.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Food } from \"../models/Food\";\r\nimport { FoodData } from \"../testData/FoodData\";\r\n\r\nexport interface CartI {\r\n  cart: Food[];\r\n}\r\n\r\nconst initialState: CartI = {\r\n  cart: [],\r\n};\r\n\r\n// Use the initialState as a default value\r\nexport default function cartReducer(state = initialState, action) {\r\n  // The reducer normally looks at the action type field to decide what happens\r\n  switch (action.type) {\r\n    case \"todos/todoAdded\": {\r\n      // We need to return a new state object\r\n      return {\r\n        // that has all the existing state data\r\n        ...state,\r\n        // but has a new array for the `todos` field\r\n      };\r\n    }\r\n    // Do something here based on the different types of actions\r\n    default:\r\n      // If this reducer doesn't recognize the action type, or doesn't\r\n      // care about this specific action, return the existing state unchanged\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAQA,MAAMA,YAAmB,GAAG;EAC1BC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAC9D;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,iBAAiB;MAAE;QACtB;QACA,OAAO;UACL;UACA,GAAGF;UACH;QACF,CAAC;MACH;IACA;IACA;MACE;MACA;MACA,OAAOA,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}