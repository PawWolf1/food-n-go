{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\CartSlider.tsx\",\n  _s = $RefreshSig$();\nimport { colors } from \"../locales/colors\";\nimport { pl } from \"../locales/languages/pl\";\nimport MoonLoader from \"react-spinners/ClipLoader\";\nimport { GrayButton } from \"../styles/Buttons\";\nimport { CardSliderBox, CartMainBox, CartDownBox, CartDownButtonBox } from \"../styles/CartBox\";\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { priceAll } from \"./functions/priceAll\";\nimport { generateList } from \"./functions/itemList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartSlider = _ref => {\n  _s();\n  let {\n    cart,\n    setCart,\n    mode\n  } = _ref;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(CardSliderBox, {\n    id: \"CardSlider\",\n    children: [/*#__PURE__*/_jsxDEV(CartMainBox, {\n      children: generateList(cart, setCart, mode)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), mode === \"cart\" ? /*#__PURE__*/_jsxDEV(CartDownBox, {\n      children: [/*#__PURE__*/_jsxDEV(SerifText, {\n        children: [\"Suma: \", priceAll(cart), \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartDownButtonBox, {\n        children: [/*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => navigate(\"/OrderTransaction\", {\n            state: {\n              cart\n            }\n          }),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: pl.order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => setCart([]),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: pl.clear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n        onClick: () => navigate(\"/MyLists\", {\n          state: {\n            cart\n          }\n        }),\n        children: \"xD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MoonLoader, {\n      color: colors.buttonbgAct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CartSlider, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CartSlider;\nvar _c;\n$RefreshReg$(_c, \"CartSlider\");","map":{"version":3,"names":["colors","pl","MoonLoader","GrayButton","CardSliderBox","CartMainBox","CartDownBox","CartDownButtonBox","ButtonText","SerifText","useNavigate","priceAll","generateList","CartSlider","cart","setCart","mode","navigate","state","order","clear","buttonbgAct"],"sources":["C:/foodngo/src/components/CartSlider.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { colors, rawColors } from \"../locales/colors\";\r\nimport { pl } from \"../locales/languages/pl\";\r\nimport { Food } from \"../models/Food\";\r\nimport MoonLoader from \"react-spinners/ClipLoader\";\r\nimport { GrayButton } from \"../styles/Buttons\";\r\nimport {\r\n  CardSliderBox,\r\n  CartMainBox,\r\n  CartDownBox,\r\n  CartDownButtonBox,\r\n} from \"../styles/CartBox\";\r\nimport { ButtonText, OswaldText, SerifText } from \"../styles/TextStyles\";\r\nimport { CartFood } from \"./CartFood\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { priceAll } from \"./functions/priceAll\";\r\nimport { generateList } from \"./functions/itemList\";\r\n\r\nexport const CartSlider = ({ cart, setCart, mode }: any) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CardSliderBox id=\"CardSlider\">\r\n      <CartMainBox>{generateList(cart, setCart, mode)}</CartMainBox>\r\n      {mode === \"cart\" ? (\r\n        <CartDownBox>\r\n          <SerifText>Suma: {priceAll(cart)}$</SerifText>\r\n          <CartDownButtonBox>\r\n            <GrayButton\r\n              onClick={() =>\r\n                navigate(\"/OrderTransaction\", {\r\n                  state: {\r\n                    cart,\r\n                  },\r\n                })\r\n              }\r\n            >\r\n              <ButtonText>{pl.order}</ButtonText>\r\n            </GrayButton>\r\n            <GrayButton onClick={() => setCart([])}>\r\n              <ButtonText>{pl.clear}</ButtonText>\r\n            </GrayButton>\r\n          </CartDownButtonBox>\r\n          <GrayButton\r\n            onClick={() =>\r\n              navigate(\"/MyLists\", {\r\n                state: {\r\n                  cart,\r\n                },\r\n              })\r\n            }\r\n          >\r\n            xD\r\n          </GrayButton>\r\n        </CartDownBox>\r\n      ) : (\r\n        <MoonLoader color={colors.buttonbgAct} />\r\n      )}\r\n    </CardSliderBox>\r\n  );\r\n};\r\n"],"mappings":";;AACA,SAASA,MAAM,QAAmB,mBAAmB;AACrD,SAASC,EAAE,QAAQ,yBAAyB;AAE5C,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SACEC,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,iBAAiB,QACZ,mBAAmB;AAC1B,SAASC,UAAU,EAAcC,SAAS,QAAQ,sBAAsB;AAExE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,YAAY,QAAQ,sBAAsB;AAAC;AAEpD,OAAO,MAAMC,UAAU,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC;EACrD,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAE9B,oBACE,QAAC,aAAa;IAAC,EAAE,EAAC,YAAY;IAAA,wBAC5B,QAAC,WAAW;MAAA,UAAEE,YAAY,CAACE,IAAI,EAAEC,OAAO,EAAEC,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QAAe,EAC7DA,IAAI,KAAK,MAAM,gBACd,QAAC,WAAW;MAAA,wBACV,QAAC,SAAS;QAAA,qBAAQL,QAAQ,CAACG,IAAI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAC9C,QAAC,iBAAiB;QAAA,wBAChB,QAAC,UAAU;UACT,OAAO,EAAE,MACPG,QAAQ,CAAC,mBAAmB,EAAE;YAC5BC,KAAK,EAAE;cACLJ;YACF;UACF,CAAC,CACF;UAAA,uBAED,QAAC,UAAU;YAAA,UAAEb,EAAE,CAACkB;UAAK;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB,eACb,QAAC,UAAU;UAAC,OAAO,EAAE,MAAMJ,OAAO,CAAC,EAAE,CAAE;UAAA,uBACrC,QAAC,UAAU;YAAA,UAAEd,EAAE,CAACmB;UAAK;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QACxB;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACpB,QAAC,UAAU;QACT,OAAO,EAAE,MACPH,QAAQ,CAAC,UAAU,EAAE;UACnBC,KAAK,EAAE;YACLJ;UACF;QACF,CAAC,CACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGU;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,gBAEd,QAAC,UAAU;MAAC,KAAK,EAAEd,MAAM,CAACqB;IAAY;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAEpB,CAAC;AAAC,GA1CWR,UAAU;EAAA,QACJH,WAAW;AAAA;AAAA,KADjBG,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}