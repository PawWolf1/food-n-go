{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\OrderTransactionSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OrderTransactionSub = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [cart, setCart] = useState(data ? data : []);\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  const [popup, setPopup] = useState({\n    isActive: false,\n    variant: \"\"\n  });\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart === null || cart === void 0 ? void 0 : cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  const {\n    register,\n    getValues\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"test\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"test1\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          const values = getValues(); // { test: \"test-input\", test1: \"test1-input\" }\n          const singleValue = getValues(\"test\"); // \"test-input\"\n          const multipleValues = getValues([\"test\", \"test1\"]);\n          // [\"test-input\", \"test1-input\"]\n        },\n        children: \"Get Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(OrderTransactionSub, \"jJoVqYujBb2HIz1H89StQZdz7hs=\", false, function () {\n  return [useForm];\n});\n_c = OrderTransactionSub;\nvar _c;\n$RefreshReg$(_c, \"OrderTransactionSub\");","map":{"version":3,"names":["useState","useEffect","moveCartSlider","useForm","OrderTransactionSub","data","cart","setCart","windowSize","setWindowSize","getWindowSize","popup","setPopup","isActive","variant","innerWidth","innerHeight","window","handleWindowResize","addEventListener","length","removeEventListener","register","getValues","values","singleValue","multipleValues"],"sources":["C:/foodngo/src/components/subScreens/OrderTransactionSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Food } from \"../../models/Food\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n} from \"../../styles/Constants\";\r\nimport {\r\n  FormBox,\r\n  FormSpecialBox,\r\n  GridBox,\r\n  SectionFormTitleBox,\r\n  SummaryBox,\r\n  TestListElementBox,\r\n} from \"../../styles/OrderTrans\";\r\nimport {\r\n  InputSectionText,\r\n  InputTitleText,\r\n  SerifText,\r\n  SerifTextL,\r\n} from \"../../styles/TextStyles\";\r\nimport { FoodData } from \"../../testData/FoodData\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { priceAll } from \"../functions/priceAll\";\r\nimport { SummaryList } from \"../SummaryList\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputsI } from \"../../models/Inputs\";\r\nimport { countTime } from \"../functions/countTime\";\r\nimport { popupBlock } from \"../PopupBlock\";\r\nimport { setInputs } from \"../functions/setInputsToForm\";\r\nimport { GrayButtonInput } from \"../../styles/Input\";\r\n\r\nexport const OrderTransactionSub = ({ data }: any) => {\r\n  const [cart, setCart] = useState<Food[]>(data ? data : []);\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n  const [popup, setPopup] = useState({ isActive: false, variant: \"\" });\r\n  function getWindowSize() {\r\n    const { innerWidth, innerHeight } = window;\r\n    return { innerWidth, innerHeight };\r\n  }\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart?.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  const { register, getValues } = useForm();\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input {...register(\"test\")} />\r\n        <input {...register(\"test1\")} />\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            const values = getValues(); // { test: \"test-input\", test1: \"test1-input\" }\r\n            const singleValue = getValues(\"test\"); // \"test-input\"\r\n            const multipleValues = getValues([\"test\", \"test1\"]);\r\n            // [\"test-input\", \"test1-input\"]\r\n          }}\r\n        >\r\n          Get Values\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAuB3C,SAASC,cAAc,QAAQ,6BAA6B;AAG5D,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAAA;AAO1C,OAAO,MAAMC,mBAAmB,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAASK,IAAI,GAAGA,IAAI,GAAG,EAAE,CAAC;EAC1D,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACU,aAAa,EAAE,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,QAAQ,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACpE,SAASJ,aAAa,GAAG;IACvB,MAAM;MAAEK,UAAU;MAAEC;IAAY,CAAC,GAAGC,MAAM;IAC1C,OAAO;MAAEF,UAAU;MAAEC;IAAY,CAAC;EACpC;EACAf,SAAS,CAAC,MAAM;IACd,SAASiB,kBAAkB,GAAG;MAC5BT,aAAa,CAACC,aAAa,EAAE,CAAC;IAChC;IAEAO,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAED,kBAAkB,CAAC;IACrDhB,cAAc,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,MAAM,CAAC;IAC5B,OAAO,MAAM;MACXH,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEH,kBAAkB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,MAAM;IAAEgB,QAAQ;IAAEC;EAAU,CAAC,GAAGpB,OAAO,EAAE;EAEzC,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA,GAAWmB,QAAQ,CAAC,MAAM;MAAC;QAAA;QAAA;QAAA;MAAA,QAAI,eAC/B;QAAA,GAAWA,QAAQ,CAAC,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QAAI,eAEhC;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAE,MAAM;UACb,MAAME,MAAM,GAAGD,SAAS,EAAE,CAAC,CAAC;UAC5B,MAAME,WAAW,GAAGF,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;UACvC,MAAMG,cAAc,GAAGH,SAAS,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;UACnD;QACF,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGK;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACN;AAEP,CAAC;AAAC,GA1CWnB,mBAAmB;EAAA,QAoBED,OAAO;AAAA;AAAA,KApB5BC,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}