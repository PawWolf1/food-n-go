{"ast":null,"code":"export function deleteDuplicats(cart) {\n  let clone = JSON.parse(JSON.stringify(cart));\n  let newData = [];\n  let count = clone.filter(data => data.id === clone[clone.length - 1].id);\n  let qqq = clone.findIndex(data1 => data1.id === clone[clone.length - 1].id);\n  if (count.length >= 2) {\n    let amount = count.reduce((partialSum, a) => partialSum + a.amount, 0);\n  } else {}\n  clone.pop();\n  return clone;\n}","map":{"version":3,"names":["deleteDuplicats","cart","clone","JSON","parse","stringify","newData","count","filter","data","id","length","qqq","findIndex","data1","amount","reduce","partialSum","a","pop"],"sources":["C:/foodngo/src/components/functions/deleteDuplicats.tsx"],"sourcesContent":["export function deleteDuplicats(cart: any) {\r\n  let clone = JSON.parse(JSON.stringify(cart));\r\n  let newData: any = [];\r\n  let count = clone.filter(\r\n    (data: any) => data.id === clone[clone.length - 1].id\r\n  );\r\n  let qqq = clone.findIndex(\r\n    (data1: any) => data1.id === clone[clone.length - 1].id\r\n  );\r\n\r\n  if (count.length >= 2) {\r\n    let amount = count.reduce(\r\n      (partialSum: any, a: any) => partialSum + a.amount,\r\n      0\r\n    );\r\n  } else {\r\n  }\r\n  clone.pop();\r\n  return clone;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,eAAe,CAACC,IAAS,EAAE;EACzC,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,IAAI,CAAC,CAAC;EAC5C,IAAIK,OAAY,GAAG,EAAE;EACrB,IAAIC,KAAK,GAAGL,KAAK,CAACM,MAAM,CACrBC,IAAS,IAAKA,IAAI,CAACC,EAAE,KAAKR,KAAK,CAACA,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,CACtD;EACD,IAAIE,GAAG,GAAGV,KAAK,CAACW,SAAS,CACtBC,KAAU,IAAKA,KAAK,CAACJ,EAAE,KAAKR,KAAK,CAACA,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,CACxD;EAED,IAAIH,KAAK,CAACI,MAAM,IAAI,CAAC,EAAE;IACrB,IAAII,MAAM,GAAGR,KAAK,CAACS,MAAM,CACvB,CAACC,UAAe,EAAEC,CAAM,KAAKD,UAAU,GAAGC,CAAC,CAACH,MAAM,EAClD,CAAC,CACF;EACH,CAAC,MAAM,CACP;EACAb,KAAK,CAACiB,GAAG,EAAE;EACX,OAAOjB,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}