{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\CartSlider.tsx\",\n  _s = $RefreshSig$();\nimport { GrayButton } from \"../styles/Buttons\";\nimport { CardSliderBox, CartMainBox, CartDownBox, CartDownButtonBox } from \"../styles/CartBox\";\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { priceAll } from \"./functions/priceAll\";\nimport { generateList } from \"./functions/itemList\";\nimport { getString } from \"../locales/languages/string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartSlider = _ref => {\n  _s();\n  let {\n    cart,\n    setCart,\n    mode,\n    setPopup\n  } = _ref;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(CardSliderBox, {\n    id: \"CardSlider\",\n    children: [/*#__PURE__*/_jsxDEV(CartMainBox, {\n      children: generateList(cart[0].name ? cart : cart, setCart, mode)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), mode === \"cart\" ? /*#__PURE__*/_jsxDEV(CartDownBox, {\n      children: [/*#__PURE__*/_jsxDEV(SerifText, {\n        children: [getString(\"other\", \"amount\"), \" \", priceAll(cart), \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartDownButtonBox, {\n        children: [/*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => navigate(\"/OrderTransaction\", {\n            state: {\n              cart\n            }\n          }),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: getString(\"buttons\", \"order\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => setPopup({\n            isActive: true,\n            message: getString(\"message\", \"areYouSureClear\"),\n            type: \"confirm\"\n          }),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            onClick: () => dispatch(clear),\n            children: getString(\"buttons\", \"clear\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n        onClick: () => setPopup({\n          isActive: true,\n          message: getString(\"message\", \"pickListName\"),\n          type: \"input\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(ButtonText, {\n          children: getString(\"buttons\", \"saveList\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CartSlider, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CartSlider;\nvar _c;\n$RefreshReg$(_c, \"CartSlider\");","map":{"version":3,"names":["GrayButton","CardSliderBox","CartMainBox","CartDownBox","CartDownButtonBox","ButtonText","SerifText","useNavigate","priceAll","generateList","getString","CartSlider","cart","setCart","mode","setPopup","navigate","name","state","isActive","message","type","dispatch","clear"],"sources":["C:/foodngo/src/components/CartSlider.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { colors, rawColors } from \"../locales/colors\";\r\nimport { pl } from \"../locales/languages/pl\";\r\nimport { Food } from \"../models/Food\";\r\nimport MoonLoader from \"react-spinners/ClipLoader\";\r\nimport { GrayButton } from \"../styles/Buttons\";\r\nimport {\r\n  CardSliderBox,\r\n  CartMainBox,\r\n  CartDownBox,\r\n  CartDownButtonBox,\r\n} from \"../styles/CartBox\";\r\nimport { ButtonText, OswaldText, SerifText } from \"../styles/TextStyles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { priceAll } from \"./functions/priceAll\";\r\nimport { generateList } from \"./functions/itemList\";\r\nimport { getString } from \"../locales/languages/string\";\r\n\r\nexport const CartSlider = ({ cart, setCart, mode, setPopup }: any) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CardSliderBox id=\"CardSlider\">\r\n      <CartMainBox>\r\n        {generateList(cart[0].name ? cart : cart, setCart, mode)}\r\n      </CartMainBox>\r\n\r\n      {mode === \"cart\" ? (\r\n        <CartDownBox>\r\n          <SerifText>\r\n            {getString(\"other\", \"amount\")} {priceAll(cart)}$\r\n          </SerifText>\r\n          <CartDownButtonBox>\r\n            <GrayButton\r\n              onClick={() =>\r\n                navigate(\"/OrderTransaction\", {\r\n                  state: {\r\n                    cart,\r\n                  },\r\n                })\r\n              }\r\n            >\r\n              <ButtonText>{getString(\"buttons\", \"order\")}</ButtonText>\r\n            </GrayButton>\r\n            <GrayButton\r\n              onClick={() =>\r\n                setPopup({\r\n                  isActive: true,\r\n                  message: getString(\"message\", \"areYouSureClear\"),\r\n                  type: \"confirm\",\r\n                })\r\n              }\r\n            >\r\n              <ButtonText onClick={() => dispatch(clear)}>\r\n                {getString(\"buttons\", \"clear\")}\r\n              </ButtonText>\r\n            </GrayButton>\r\n          </CartDownButtonBox>\r\n          <GrayButton\r\n            onClick={() =>\r\n              setPopup({\r\n                isActive: true,\r\n                message: getString(\"message\", \"pickListName\"),\r\n                type: \"input\",\r\n              })\r\n            }\r\n          >\r\n            <ButtonText>{getString(\"buttons\", \"saveList\")}</ButtonText>\r\n          </GrayButton>\r\n        </CartDownBox>\r\n      ) : null}\r\n    </CardSliderBox>\r\n  );\r\n};\r\n"],"mappings":";;AAKA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SACEC,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,iBAAiB,QACZ,mBAAmB;AAC1B,SAASC,UAAU,EAAcC,SAAS,QAAQ,sBAAsB;AACxE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AAAC;AAExD,OAAO,MAAMC,UAAU,GAAG,QAA4C;EAAA;EAAA,IAA3C;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAc,CAAC;EAC/D,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,oBACE,QAAC,aAAa;IAAC,EAAE,EAAC,YAAY;IAAA,wBAC5B,QAAC,WAAW;MAAA,UACTE,YAAY,CAACG,IAAI,CAAC,CAAC,CAAC,CAACK,IAAI,GAAGL,IAAI,GAAGA,IAAI,EAAEC,OAAO,EAAEC,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QAC5C,EAEbA,IAAI,KAAK,MAAM,gBACd,QAAC,WAAW;MAAA,wBACV,QAAC,SAAS;QAAA,WACPJ,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAGF,QAAQ,CAACI,IAAI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC,eACZ,QAAC,iBAAiB;QAAA,wBAChB,QAAC,UAAU;UACT,OAAO,EAAE,MACPI,QAAQ,CAAC,mBAAmB,EAAE;YAC5BE,KAAK,EAAE;cACLN;YACF;UACF,CAAC,CACF;UAAA,uBAED,QAAC,UAAU;YAAA,UAAEF,SAAS,CAAC,SAAS,EAAE,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QAC7C,eACb,QAAC,UAAU;UACT,OAAO,EAAE,MACPK,QAAQ,CAAC;YACPI,QAAQ,EAAE,IAAI;YACdC,OAAO,EAAEV,SAAS,CAAC,SAAS,EAAE,iBAAiB,CAAC;YAChDW,IAAI,EAAE;UACR,CAAC,CACF;UAAA,uBAED,QAAC,UAAU;YAAC,OAAO,EAAE,MAAMC,QAAQ,CAACC,KAAK,CAAE;YAAA,UACxCb,SAAS,CAAC,SAAS,EAAE,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA;QACnB;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACpB,QAAC,UAAU;QACT,OAAO,EAAE,MACPK,QAAQ,CAAC;UACPI,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAEV,SAAS,CAAC,SAAS,EAAE,cAAc,CAAC;UAC7CW,IAAI,EAAE;QACR,CAAC,CACF;QAAA,uBAED,QAAC,UAAU;UAAA,UAAEX,SAAS,CAAC,SAAS,EAAE,UAAU;QAAC;UAAA;UAAA;UAAA;QAAA;MAAc;QAAA;QAAA;QAAA;MAAA,QAChD;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,GACZ,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEpB,CAAC;AAAC,GAvDWC,UAAU;EAAA,QACJJ,WAAW;AAAA;AAAA,KADjBI,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}