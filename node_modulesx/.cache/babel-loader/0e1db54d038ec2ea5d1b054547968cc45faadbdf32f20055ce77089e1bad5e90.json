{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\forms\\\\FormOrderDetails.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { Constants, inputDataDelivery, inputDataPersonal, inputDataSpecial } from \"../../styles/Constants\";\nimport { setInputs } from \"../functions/setInputsToForm\";\nimport { GridBox2 } from \"../../style\";\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\nimport { GrayButtonInput } from \"../../styles/Input\";\nimport { InputSectionText } from \"../../styles/TextStyles\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setForm } from \"../../store/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FormOrderDetails = () => {\n  _s();\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = data => console.log(getValues());\n  const xxx = useSelector(state => state.form.data);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(setForm(getValues()));\n      console.log(xxx);\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridBox2, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(InputSectionText, {\n        children: Constants.forms.deliveryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n        children: setInputs({\n          data: inputDataDelivery.data,\n          register,\n          errors\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSectionText, {\n        children: Constants.forms.deliveryTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n        children: setInputs({\n          data: inputDataPersonal.data,\n          register,\n          errors\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSpecialBox, {\n        children: setInputs({\n          data: inputDataSpecial.data,\n          register,\n          getValues,\n          errors,\n          setValue\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrayButtonInput, {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FormOrderDetails, \"jM8wfb4NWEqqyUgWzcWn4uaw0tE=\", false, function () {\n  return [useForm, useDispatch, useSelector];\n});\n_c = FormOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"FormOrderDetails\");","map":{"version":3,"names":["useForm","Constants","inputDataDelivery","inputDataPersonal","inputDataSpecial","setInputs","GridBox2","FormBox","FormSpecialBox","GrayButtonInput","InputSectionText","useEffect","useDispatch","useSelector","setForm","FormOrderDetails","register","setValue","handleSubmit","getValues","formState","errors","dispatch","onSubmit","data","console","log","xxx","state","form","interval","setInterval","clearInterval","forms","deliveryData","deliveryTime"],"sources":["C:/foodngo/src/components/forms/FormOrderDetails.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n} from \"../../styles/Constants\";\r\nimport { setInputs } from \"../functions/setInputsToForm\";\r\nimport { GridBox2 } from \"../../style\";\r\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\r\nimport { GrayButtonInput } from \"../../styles/Input\";\r\nimport { InputSectionText } from \"../../styles/TextStyles\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setForm } from \"../../store/form\";\r\n\r\nexport const FormOrderDetails = () => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (data: any) => console.log(getValues());\r\n  const xxx = useSelector((state: any) => state.form.data);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      dispatch(setForm(getValues()));\r\n      console.log(xxx);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GridBox2 onSubmit={handleSubmit(onSubmit)}>\r\n        <InputSectionText>{Constants.forms.deliveryData}</InputSectionText>\r\n        <FormBox>\r\n          {setInputs({ data: inputDataDelivery.data, register, errors })}\r\n        </FormBox>\r\n        <InputSectionText>{Constants.forms.deliveryTime}</InputSectionText>\r\n        <FormBox>\r\n          {setInputs({ data: inputDataPersonal.data, register, errors })}\r\n        </FormBox>\r\n        <FormSpecialBox>\r\n          {setInputs({\r\n            data: inputDataSpecial.data,\r\n            register,\r\n            getValues,\r\n            errors,\r\n            setValue,\r\n          })}\r\n        </FormSpecialBox>\r\n        <GrayButtonInput type=\"submit\" />\r\n      </GridBox2>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SACEC,SAAS,EACTC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,QACX,wBAAwB;AAC/B,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,OAAO,EAAEC,cAAc,QAAQ,yBAAyB;AACjE,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAAC;AAAA;AAE3C,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EACpC,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGrB,OAAO,EAAE;EACb,MAAMsB,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACP,SAAS,EAAE,CAAC;EACxD,MAAMQ,GAAG,GAAGd,WAAW,CAAEe,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACL,IAAI,CAAC;EACxDb,SAAS,CAAC,MAAM;IACd,MAAMmB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCT,QAAQ,CAACR,OAAO,CAACK,SAAS,EAAE,CAAC,CAAC;MAC9BM,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB,CAAC,EAAE,KAAK,CAAC;IACT,OAAO,MAAMK,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACE,QAAC,QAAQ;MAAC,QAAQ,EAAEZ,YAAY,CAACK,QAAQ,CAAE;MAAA,wBACzC,QAAC,gBAAgB;QAAA,UAAEtB,SAAS,CAACgC,KAAK,CAACC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAoB,eACnE,QAAC,OAAO;QAAA,UACL7B,SAAS,CAAC;UAAEmB,IAAI,EAAEtB,iBAAiB,CAACsB,IAAI;UAAER,QAAQ;UAAEK;QAAO,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACtD,eACV,QAAC,gBAAgB;QAAA,UAAEpB,SAAS,CAACgC,KAAK,CAACE;MAAY;QAAA;QAAA;QAAA;MAAA,QAAoB,eACnE,QAAC,OAAO;QAAA,UACL9B,SAAS,CAAC;UAAEmB,IAAI,EAAErB,iBAAiB,CAACqB,IAAI;UAAER,QAAQ;UAAEK;QAAO,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACtD,eACV,QAAC,cAAc;QAAA,UACZhB,SAAS,CAAC;UACTmB,IAAI,EAAEpB,gBAAgB,CAACoB,IAAI;UAC3BR,QAAQ;UACRG,SAAS;UACTE,MAAM;UACNJ;QACF,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACa,eACjB,QAAC,eAAe;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB,iBACV;AAEP,CAAC;AAAC,GA3CWF,gBAAgB;EAAA,QAOvBf,OAAO,EACMY,WAAW,EAEhBC,WAAW;AAAA;AAAA,KAVZE,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}