{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { deleteDuplicats } from \"../components/functions/deleteDuplicats\";\nconst initialState = {\n  cart: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    clear: state => {\n      state.cart = initialState.cart;\n    },\n    upgradeCart: (state, action) => {\n      let newData = deleteDuplicats(state.cart);\n      console.log(newData);\n      state.cart = newData;\n    },\n    upgradeCartAdd: (state, action) => {\n      state.cart[action.payload].amount += 1;\n    },\n    upgradeCartDesc: (state, action) => {\n      state.cart[action.payload].amount -= 1;\n    },\n    upgradeCartDelete: (state, action) => {\n      state.cart = [action.payload];\n    }\n  }\n});\nexport const {\n  upgradeCart,\n  clear,\n  upgradeCartAdd,\n  upgradeCartDesc,\n  upgradeCartDelete\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","deleteDuplicats","initialState","cart","cartSlice","name","reducers","clear","state","upgradeCart","action","newData","console","log","upgradeCartAdd","payload","amount","upgradeCartDesc","upgradeCartDelete","actions","reducer"],"sources":["C:/foodngo/src/store/cart.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { deleteDuplicats } from \"../components/functions/deleteDuplicats\";\r\nimport { Food } from \"../models/Food\";\r\nimport { FoodData } from \"../testData/FoodData\";\r\n\r\nexport interface CartI {\r\n  cart: Food[];\r\n}\r\n\r\nconst initialState: CartI = {\r\n  cart: [],\r\n};\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    clear: (state) => {\r\n      state.cart = initialState.cart;\r\n    },\r\n    upgradeCart: (state, action) => {\r\n      let newData = deleteDuplicats(state.cart);\r\n      console.log(newData);\r\n      state.cart = newData;\r\n    },\r\n    upgradeCartAdd: (state, action) => {\r\n      state.cart[action.payload].amount += 1;\r\n    },\r\n    upgradeCartDesc: (state, action) => {\r\n      state.cart[action.payload].amount -= 1;\r\n    },\r\n    upgradeCartDelete: (state, action) => {\r\n      state.cart = [action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  upgradeCart,\r\n  clear,\r\n  upgradeCartAdd,\r\n  upgradeCartDesc,\r\n  upgradeCartDelete,\r\n} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,yCAAyC;AAQzE,MAAMC,YAAmB,GAAG;EAC1BC,IAAI,EAAE;AACR,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACL,IAAI,GAAGD,YAAY,CAACC,IAAI;IAChC,CAAC;IACDM,WAAW,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9B,IAAIC,OAAO,GAAGV,eAAe,CAACO,KAAK,CAACL,IAAI,CAAC;MACzCS,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;MACpBH,KAAK,CAACL,IAAI,GAAGQ,OAAO;IACtB,CAAC;IACDG,cAAc,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACL,IAAI,CAACO,MAAM,CAACK,OAAO,CAAC,CAACC,MAAM,IAAI,CAAC;IACxC,CAAC;IACDC,eAAe,EAAE,CAACT,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACL,IAAI,CAACO,MAAM,CAACK,OAAO,CAAC,CAACC,MAAM,IAAI,CAAC;IACxC,CAAC;IACDE,iBAAiB,EAAE,CAACV,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACL,IAAI,GAAG,CAACO,MAAM,CAACK,OAAO,CAAC;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXN,WAAW;EACXF,KAAK;EACLO,cAAc;EACdG,eAAe;EACfC;AACF,CAAC,GAAGd,SAAS,CAACe,OAAO;AAErB,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}