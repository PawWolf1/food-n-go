{"ast":null,"code":"const requestHeaders = new Headers();\nrequestHeaders.set(\"Content-Type\", \"application/json\");\nexport async function apiFetchProducts() {\n  try {\n    const response = await fetch(\"http://localhost:3000/products\", {\n      method: \"GET\",\n      headers: requestHeaders\n    });\n    if (response.ok) {\n      const products = await response.json();\n      return {\n        products\n      };\n    } else {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n  } catch (error) {\n    return {\n      error\n    };\n  }\n}","map":{"version":3,"names":["requestHeaders","Headers","set","apiFetchProducts","response","fetch","method","headers","ok","products","json","Error","status","statusText","error"],"sources":["C:/foodngo/src/api.ts"],"sourcesContent":["import { Products } from \"./types\";\n\nconst requestHeaders = new Headers();\nrequestHeaders.set(\"Content-Type\", \"application/json\");\n\nexport async function apiFetchProducts(): Promise<any> {\n  try {\n    const response = await fetch(\"http://localhost:3000/products\", {\n      method: \"GET\",\n      headers: requestHeaders,\n    });\n    if (response.ok) {\n      const products: Products = await response.json();\n      return { products };\n    } else {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n  } catch (error) {\n    return { error };\n  }\n}\n"],"mappings":"AAEA,MAAMA,cAAc,GAAG,IAAIC,OAAO,EAAE;AACpCD,cAAc,CAACE,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;AAEtD,OAAO,eAAeC,gBAAgB,GAAiB;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEP;IACX,CAAC,CAAC;IACF,IAAII,QAAQ,CAACI,EAAE,EAAE;MACf,MAAMC,QAAkB,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAChD,OAAO;QAAED;MAAS,CAAC;IACrB,CAAC,MAAM;MACL,MAAM,IAAIE,KAAK,CAAE,GAAEP,QAAQ,CAACQ,MAAO,MAAKR,QAAQ,CAACS,UAAW,EAAC,CAAC;IAChE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEA;IAAM,CAAC;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}