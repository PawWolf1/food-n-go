{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\forms\\\\FormOrderDetails.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { inputDataDelivery, inputDataPersonal, inputDataSpecial } from \"../../styles/Constants\";\nimport { setInputs } from \"../functions/setInputsToForm\";\nimport { GridBox2 } from \"../../style\";\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\nimport { GrayButtonInput } from \"../../styles/Input\";\nimport { InputSectionText } from \"../../styles/TextStyles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getString } from \"../../locales/languages/string\";\nimport { addHistory } from \"../../store/lists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FormOrderDetails = food => {\n  _s();\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => sendOrder(data);\n  const formData = useSelector(state => state.form.data);\n  const dispatch = useDispatch();\n  function sendOrder(data) {\n    const today = new Date().toISOString().slice(0, 10);\n    dispatch(addHistory({\n      food: food.food,\n      title: \"Order #4 \" + today,\n      orderData: data\n    }));\n  }\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     try {\n  //       dispatch(setForm({ upgr: \"all\", value: getValues() }));\n  //     } catch {}\n  //   }, 2000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridBox2, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(InputSectionText, {\n        children: getString(\"forms\", \"deliveryData\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n        children: setInputs({\n          data: inputDataDelivery.data,\n          register,\n          errors,\n          formData\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n        children: setInputs({\n          data: inputDataPersonal.data,\n          register,\n          errors,\n          formData\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormSpecialBox, {\n        children: setInputs({\n          data: inputDataSpecial.data,\n          register,\n          errors,\n          formData\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrayButtonInput, {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FormOrderDetails, \"+NoP3Abi89Af960ZXFtB8hWZvCw=\", false, function () {\n  return [useForm, useSelector, useDispatch];\n});\n_c = FormOrderDetails;\nvar _c;\n$RefreshReg$(_c, \"FormOrderDetails\");","map":{"version":3,"names":["useForm","inputDataDelivery","inputDataPersonal","inputDataSpecial","setInputs","GridBox2","FormBox","FormSpecialBox","GrayButtonInput","InputSectionText","useDispatch","useSelector","getString","addHistory","FormOrderDetails","food","register","setValue","handleSubmit","getValues","formState","errors","onSubmit","data","sendOrder","formData","state","form","dispatch","today","Date","toISOString","slice","title","orderData"],"sources":["C:/foodngo/src/components/forms/FormOrderDetails.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n} from \"../../styles/Constants\";\r\nimport { setInputs } from \"../functions/setInputsToForm\";\r\nimport { GridBox2 } from \"../../style\";\r\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\r\nimport { GrayButtonInput } from \"../../styles/Input\";\r\nimport { InputSectionText } from \"../../styles/TextStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setForm } from \"../../store/form\";\r\nimport { getString } from \"../../locales/languages/string\";\r\nimport { addHistory } from \"../../store/lists\";\r\n\r\nexport const FormOrderDetails = (food: any) => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data: any) => sendOrder(data);\r\n  const formData = useSelector((state: any) => state.form.data);\r\n  const dispatch = useDispatch();\r\n\r\n  function sendOrder(data: any) {\r\n    const today = new Date().toISOString().slice(0, 10);\r\n    dispatch(\r\n      addHistory({\r\n        food: food.food,\r\n        title: \"Order #4 \" + today,\r\n        orderData: data,\r\n      })\r\n    );\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   const interval = setInterval(() => {\r\n  //     try {\r\n  //       dispatch(setForm({ upgr: \"all\", value: getValues() }));\r\n  //     } catch {}\r\n  //   }, 2000);\r\n\r\n  //   return () => clearInterval(interval);\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <GridBox2 onSubmit={handleSubmit(onSubmit)}>\r\n        <InputSectionText>\r\n          {getString(\"forms\", \"deliveryData\")}\r\n        </InputSectionText>\r\n        <FormBox>\r\n          {setInputs({\r\n            data: inputDataDelivery.data,\r\n            register,\r\n            errors,\r\n            formData,\r\n          })}\r\n        </FormBox>\r\n        <FormBox>\r\n          {setInputs({\r\n            data: inputDataPersonal.data,\r\n            register,\r\n            errors,\r\n            formData,\r\n          })}\r\n        </FormBox>\r\n        <FormSpecialBox>\r\n          {setInputs({\r\n            data: inputDataSpecial.data,\r\n            register,\r\n            errors,\r\n            formData,\r\n          })}\r\n        </FormSpecialBox>\r\n        <GrayButtonInput type=\"submit\" />\r\n      </GridBox2>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AACA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAEEC,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,QACX,wBAAwB;AAC/B,SAASC,SAAS,QAAQ,8BAA8B;AACxD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,OAAO,EAAEC,cAAc,QAAQ,yBAAyB;AACjE,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAAA;AAE/C,OAAO,MAAMC,gBAAgB,GAAIC,IAAS,IAAK;EAAA;EAC7C,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGrB,OAAO,EAAE;EACb,MAAMsB,QAAQ,GAAIC,IAAS,IAAKC,SAAS,CAACD,IAAI,CAAC;EAC/C,MAAME,QAAQ,GAAGd,WAAW,CAAEe,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC;EAC7D,MAAMK,QAAQ,GAAGlB,WAAW,EAAE;EAE9B,SAASc,SAAS,CAACD,IAAS,EAAE;IAC5B,MAAMM,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IACnDJ,QAAQ,CACNf,UAAU,CAAC;MACTE,IAAI,EAAEA,IAAI,CAACA,IAAI;MACfkB,KAAK,EAAE,WAAW,GAAGJ,KAAK;MAC1BK,SAAS,EAAEX;IACb,CAAC,CAAC,CACH;EACH;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACE;IAAA,uBACE,QAAC,QAAQ;MAAC,QAAQ,EAAEL,YAAY,CAACI,QAAQ,CAAE;MAAA,wBACzC,QAAC,gBAAgB;QAAA,UACdV,SAAS,CAAC,OAAO,EAAE,cAAc;MAAC;QAAA;QAAA;QAAA;MAAA,QAClB,eACnB,QAAC,OAAO;QAAA,UACLR,SAAS,CAAC;UACTmB,IAAI,EAAEtB,iBAAiB,CAACsB,IAAI;UAC5BP,QAAQ;UACRK,MAAM;UACNI;QACF,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACM,eACV,QAAC,OAAO;QAAA,UACLrB,SAAS,CAAC;UACTmB,IAAI,EAAErB,iBAAiB,CAACqB,IAAI;UAC5BP,QAAQ;UACRK,MAAM;UACNI;QACF,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACM,eACV,QAAC,cAAc;QAAA,UACZrB,SAAS,CAAC;UACTmB,IAAI,EAAEpB,gBAAgB,CAACoB,IAAI;UAC3BP,QAAQ;UACRK,MAAM;UACNI;QACF,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACa,eACjB,QAAC,eAAe;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB,iBACV;AAEP,CAAC;AAAC,GAlEWX,gBAAgB;EAAA,QAOvBd,OAAO,EAEMW,WAAW,EACXD,WAAW;AAAA;AAAA,KAVjBI,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}