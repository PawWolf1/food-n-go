{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\HomeSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getString } from \"../../locales/languages/string\";\nimport { FoodTile } from \"../../models/FoodComp\";\nimport { GridBox } from \"../../style\";\nimport { CartBox } from \"../../styles/CartBox\";\nimport { OswaldText } from \"../../styles/TextStyles\";\nimport { CartSlider } from \"../CartSlider\";\nimport { getWindowSize } from \"../functions/getWindowSize\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { sortFoodBy } from \"../functions/sortFoodBy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomeSub = () => {\n  _s();\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  const cart = useSelector(state => state.cart.cart);\n  const filters = useSelector(state => state.search);\n  const food = useSelector(state => state.food.food);\n  const filtered = sortFoodBy(food, filters);\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  function getPosition(data) {\n    const result = food.filter(item => item.id === data)[0];\n    const findPosition = food.indexOf(result);\n    return findPosition;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridBox, {\n      theme: {\n        width: windowSize.innerWidth\n      },\n      children: filtered.length !== 0 ? filtered.map(data => FoodTile(data, getPosition)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(OswaldText, {\n          children: getString(\"message\", \"noSearch\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CartBox, {\n      theme: {\n        img: require(\"../../locales/images/foodBg1.png\"),\n        width: windowSize.innerWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(CartSlider, {\n        mode: \"cart\",\n        cart: cart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomeSub, \"ht8vzDiZlgOoX5USTy/oCNdTp/E=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n_c = HomeSub;\nvar _c;\n$RefreshReg$(_c, \"HomeSub\");","map":{"version":3,"names":["useState","useEffect","useSelector","getString","FoodTile","GridBox","CartBox","OswaldText","CartSlider","getWindowSize","moveCartSlider","sortFoodBy","HomeSub","windowSize","setWindowSize","cart","state","filters","search","food","filtered","handleWindowResize","window","addEventListener","length","removeEventListener","getPosition","data","result","filter","item","id","findPosition","indexOf","width","innerWidth","map","img","require"],"sources":["C:/foodngo/src/components/subScreens/HomeSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getString } from \"../../locales/languages/string\";\r\n\r\nimport { FoodTile } from \"../../models/FoodComp\";\r\nimport { GridBox } from \"../../style\";\r\nimport { CartBox } from \"../../styles/CartBox\";\r\nimport { OswaldText } from \"../../styles/TextStyles\";\r\nimport { CartSlider } from \"../CartSlider\";\r\nimport { getWindowSize } from \"../functions/getWindowSize\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { sortFoodBy } from \"../functions/sortFoodBy\";\r\n\r\nexport const HomeSub = () => {\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n  const cart = useSelector((state: any) => state.cart.cart);\r\n  const filters = useSelector((state: any) => state.search);\r\n  const food = useSelector((state: any) => state.food.food);\r\n  const filtered = sortFoodBy(food, filters);\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  function getPosition(data: any) {\r\n    const result = food.filter((item: any) => item.id === data)[0];\r\n    const findPosition = food.indexOf(result);\r\n    return findPosition;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridBox\r\n        theme={{\r\n          width: windowSize.innerWidth,\r\n        }}\r\n      >\r\n        {filtered.length !== 0 ? (\r\n          filtered.map((data: any) => FoodTile(data, getPosition))\r\n        ) : (\r\n          <>\r\n            <OswaldText>{getString(\"message\", \"noSearch\")}</OswaldText>\r\n          </>\r\n        )}\r\n      </GridBox>\r\n      <CartBox\r\n        theme={{\r\n          img: require(\"../../locales/images/foodBg1.png\"),\r\n          width: windowSize.innerWidth,\r\n        }}\r\n      >\r\n        <CartSlider mode={\"cart\"} cart={cart} />\r\n      </CartBox>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAsBC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,UAAU,QAAQ,yBAAyB;AAAC;AAAA;AAErD,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACS,aAAa,EAAE,CAAC;EAC7D,MAAMM,IAAI,GAAGb,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACD,IAAI,CAACA,IAAI,CAAC;EACzD,MAAME,OAAO,GAAGf,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACE,MAAM,CAAC;EACzD,MAAMC,IAAI,GAAGjB,WAAW,CAAEc,KAAU,IAAKA,KAAK,CAACG,IAAI,CAACA,IAAI,CAAC;EACzD,MAAMC,QAAQ,GAAGT,UAAU,CAACQ,IAAI,EAAEF,OAAO,CAAC;EAC1ChB,SAAS,CAAC,MAAM;IACd,SAASoB,kBAAkB,GAAG;MAC5BP,aAAa,CAACL,aAAa,EAAE,CAAC;IAChC;IACAa,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,kBAAkB,CAAC;IACrDX,cAAc,CAACK,IAAI,CAACS,MAAM,CAAC;IAC3B,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,kBAAkB,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,SAASW,WAAW,CAACC,IAAS,EAAE;IAC9B,MAAMC,MAAM,GAAGT,IAAI,CAACU,MAAM,CAAEC,IAAS,IAAKA,IAAI,CAACC,EAAE,KAAKJ,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAMK,YAAY,GAAGb,IAAI,CAACc,OAAO,CAACL,MAAM,CAAC;IACzC,OAAOI,YAAY;EACrB;EAEA,oBACE;IAAA,wBACE,QAAC,OAAO;MACN,KAAK,EAAE;QACLE,KAAK,EAAErB,UAAU,CAACsB;MACpB,CAAE;MAAA,UAEDf,QAAQ,CAACI,MAAM,KAAK,CAAC,GACpBJ,QAAQ,CAACgB,GAAG,CAAET,IAAS,IAAKvB,QAAQ,CAACuB,IAAI,EAAED,WAAW,CAAC,CAAC,gBAExD;QAAA,uBACE,QAAC,UAAU;UAAA,UAAEvB,SAAS,CAAC,SAAS,EAAE,UAAU;QAAC;UAAA;UAAA;UAAA;QAAA;MAAc;IAE9D;MAAA;MAAA;MAAA;IAAA,QACO,eACV,QAAC,OAAO;MACN,KAAK,EAAE;QACLkC,GAAG,EAAEC,OAAO,CAAC,kCAAkC,CAAC;QAChDJ,KAAK,EAAErB,UAAU,CAACsB;MACpB,CAAE;MAAA,uBAEF,QAAC,UAAU;QAAC,IAAI,EAAE,MAAO;QAAC,IAAI,EAAEpB;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA,gBACT;AAEP,CAAC;AAAC,GAhDWH,OAAO;EAAA,QAELV,WAAW,EACRA,WAAW,EACdA,WAAW;AAAA;AAAA,KAJbU,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}