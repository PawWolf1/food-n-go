{"ast":null,"code":"export function sortFoodBy(food, filters) {\n  const {\n    type,\n    inOrder\n  } = filters.sortBy;\n  function sortBy() {\n    switch (type) {\n      case \"price\":\n        return food.sort((a, b) => !inOrder ? a.price - b.price : b.price - a.price);\n      case \"name\":\n        return food.sort(function (a, b) {\n          if (a.name < b.name && inOrder || b.name < a.name && !inOrder) {\n            return -1;\n          }\n          if (a.name > b.name && inOrder || b.name > a.name && !inOrder) {\n            return 1;\n          }\n          return 0;\n        });\n      default:\n        return food;\n    }\n  }\n  function filterBy(list) {\n    let x = [...list];\n    x.filter(function isBigEnough(item) {\n      let xx = item.category;\n      console.log(xx);\n      return xx.includes(filters.filters[0].name);\n    });\n    return x;\n  }\n  let list = sortBy();\n  console.log(filterBy(list));\n  return list;\n}","map":{"version":3,"names":["sortFoodBy","food","filters","type","inOrder","sortBy","sort","a","b","price","name","filterBy","list","x","filter","isBigEnough","item","xx","category","console","log","includes"],"sources":["C:/foodngo/src/components/functions/sortFoodBy.tsx"],"sourcesContent":["import { Food } from \"../../models/Food\";\r\n\r\nexport function sortFoodBy(food: Food[], filters: any) {\r\n  const { type, inOrder } = filters.sortBy;\r\n  function sortBy() {\r\n    switch (type) {\r\n      case \"price\":\r\n        return food.sort((a, b) =>\r\n          !inOrder ? a.price - b.price : b.price - a.price\r\n        );\r\n      case \"name\":\r\n        return food.sort(function (a, b) {\r\n          if ((a.name < b.name && inOrder) || (b.name < a.name && !inOrder)) {\r\n            return -1;\r\n          }\r\n          if ((a.name > b.name && inOrder) || (b.name > a.name && !inOrder)) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      default:\r\n        return food;\r\n    }\r\n  }\r\n  function filterBy(list: any) {\r\n    let x = [...list];\r\n    x.filter(function isBigEnough(item) {\r\n      let xx = item.category;\r\n      console.log(xx);\r\n      return xx.includes(filters.filters[0].name);\r\n    });\r\n    return x;\r\n  }\r\n  let list = sortBy();\r\n  console.log(filterBy(list));\r\n\r\n  return list;\r\n}\r\n"],"mappings":"AAEA,OAAO,SAASA,UAAU,CAACC,IAAY,EAAEC,OAAY,EAAE;EACrD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,OAAO,CAACG,MAAM;EACxC,SAASA,MAAM,GAAG;IAChB,QAAQF,IAAI;MACV,KAAK,OAAO;QACV,OAAOF,IAAI,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACpB,CAACJ,OAAO,GAAGG,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,GAAGD,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CACjD;MACH,KAAK,MAAM;QACT,OAAOR,IAAI,CAACK,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAC/B,IAAKD,CAAC,CAACG,IAAI,GAAGF,CAAC,CAACE,IAAI,IAAIN,OAAO,IAAMI,CAAC,CAACE,IAAI,GAAGH,CAAC,CAACG,IAAI,IAAI,CAACN,OAAQ,EAAE;YACjE,OAAO,CAAC,CAAC;UACX;UACA,IAAKG,CAAC,CAACG,IAAI,GAAGF,CAAC,CAACE,IAAI,IAAIN,OAAO,IAAMI,CAAC,CAACE,IAAI,GAAGH,CAAC,CAACG,IAAI,IAAI,CAACN,OAAQ,EAAE;YACjE,OAAO,CAAC;UACV;UACA,OAAO,CAAC;QACV,CAAC,CAAC;MACJ;QACE,OAAOH,IAAI;IAAC;EAElB;EACA,SAASU,QAAQ,CAACC,IAAS,EAAE;IAC3B,IAAIC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAAC;IACjBC,CAAC,CAACC,MAAM,CAAC,SAASC,WAAW,CAACC,IAAI,EAAE;MAClC,IAAIC,EAAE,GAAGD,IAAI,CAACE,QAAQ;MACtBC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;MACf,OAAOA,EAAE,CAACI,QAAQ,CAACnB,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC;IAC7C,CAAC,CAAC;IACF,OAAOG,CAAC;EACV;EACA,IAAID,IAAI,GAAGP,MAAM,EAAE;EACnBc,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACC,IAAI,CAAC,CAAC;EAE3B,OAAOA,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}