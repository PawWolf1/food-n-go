{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\MyListElementContent.tsx\",\n  _s = $RefreshSig$();\nimport { GrayButton } from \"../styles/Buttons\";\nimport { ListFoodBox, ListButtonBox, ListHandleBox, ListHandleButtonBox } from \"../styles/MyLists\";\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\nimport { generateList } from \"./functions/itemList\";\nimport { priceAll } from \"./functions/priceAll\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getString } from \"../locales/languages/string\";\nimport { useDispatch } from \"react-redux\";\nimport { replaceCart } from \"../store/cart\";\nimport { deleteMyListElement } from \"../store/lists\";\nimport { setPopup } from \"../store/popup\";\nimport { FlexPart } from \"../style\";\nimport { HistoryFormData } from \"./HistoryFormData\";\nimport { clearForm, setForm } from \"../store/form\";\nimport { setLoading } from \"../store/loading\";\nimport { apiFetchMyListsDelete } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyListElementContent = _ref => {\n  _s();\n  let {\n    item,\n    setData,\n    index,\n    type\n  } = _ref;\n  const [active, setActive] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  function navOrder() {\n    dispatch(replaceCart(item.food));\n    if (item.orderData) dispatch(setForm({\n      upgr: \"all\",\n      value: item.orderData\n    }));else {\n      dispatch(clearForm());\n    }\n    navigate(\"/OrderTransaction\");\n  }\n  function navHome() {\n    dispatch(replaceCart(item.food));\n    navigate(\"/\");\n  }\n  function deleteList() {\n    setActive(false);\n    dispatch(setLoading(true));\n    apiFetchMyListsDelete(12).then(result => {\n      if (result !== null) {\n        dispatch(setMyLists(result.myLists));\n        dispatch(reset());\n      }\n      setTimeout(() => {\n        dispatch(setLoading(false));\n      }, 1000);\n    }).catch(e => null);\n    dispatch(deleteMyListElement(index));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListHandleBox, {\n      theme: active,\n      children: [/*#__PURE__*/_jsxDEV(ListHandleButtonBox, {\n        onClick: () => setActive(!active),\n        children: [/*#__PURE__*/_jsxDEV(FlexPart, {\n          theme: 1,\n          children: /*#__PURE__*/_jsxDEV(SerifText, {\n            children: [\" \", item.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexPart, {\n          theme: 1,\n          children: [/*#__PURE__*/_jsxDEV(SerifText, {\n            children: [\" \", item === null || item === void 0 ? void 0 : item.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SerifText, {\n            children: [\" \", item === null || item === void 0 ? void 0 : item.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SerifText, {\n          children: [getString(\"other\", \"value\"), \" \", priceAll(item.food), \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), active ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListFoodBox, {\n          style: {\n            padding: \"10px 10px 10px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FlexPart, {\n            theme: 3,\n            style: {\n              flexDirection: \"column\",\n              justifyContent: \"flex-start\"\n            },\n            children: generateList(item.food, setData, \"mode\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), type === \"history\" ? /*#__PURE__*/_jsxDEV(FlexPart, {\n            theme: 2,\n            children: /*#__PURE__*/_jsxDEV(HistoryFormData, {\n              ...item.orderData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListButtonBox, {\n          children: [/*#__PURE__*/_jsxDEV(GrayButton, {\n            onClick: () => navOrder(),\n            children: /*#__PURE__*/_jsxDEV(ButtonText, {\n              children: getString(\"buttons\", \"order\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n            onClick: () => navHome(),\n            children: /*#__PURE__*/_jsxDEV(ButtonText, {\n              children: getString(\"buttons\", \"addToCart\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), type === \"history\" ? null : /*#__PURE__*/_jsxDEV(GrayButton, {\n            onClick: () => dispatch(setPopup({\n              message: \"areYouSureDelete\",\n              type: \"confirm\",\n              onConfirm: () => deleteList()\n            })),\n            children: /*#__PURE__*/_jsxDEV(ButtonText, {\n              children: getString(\"buttons\", \"delete\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MyListElementContent, \"y7zfFQsCxfMMFyAvkFiAfynvYIc=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = MyListElementContent;\nvar _c;\n$RefreshReg$(_c, \"MyListElementContent\");","map":{"version":3,"names":["GrayButton","ListFoodBox","ListButtonBox","ListHandleBox","ListHandleButtonBox","ButtonText","SerifText","generateList","priceAll","useState","useNavigate","getString","useDispatch","replaceCart","deleteMyListElement","setPopup","FlexPart","HistoryFormData","clearForm","setForm","setLoading","apiFetchMyListsDelete","MyListElementContent","item","setData","index","type","active","setActive","navigate","dispatch","navOrder","food","orderData","upgr","value","navHome","deleteList","then","result","setMyLists","myLists","reset","setTimeout","catch","e","title","date","time","padding","flexDirection","justifyContent","message","onConfirm"],"sources":["C:/foodngo/src/components/MyListElementContent.tsx"],"sourcesContent":["import { GrayButton } from \"../styles/Buttons\";\r\nimport {\r\n  ListFoodBox,\r\n  ListButtonBox,\r\n  ListHandleBox,\r\n  ListHandleButtonBox,\r\n} from \"../styles/MyLists\";\r\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\r\nimport { generateList } from \"./functions/itemList\";\r\nimport { priceAll } from \"./functions/priceAll\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getString } from \"../locales/languages/string\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { replaceCart } from \"../store/cart\";\r\nimport { deleteMyListElement } from \"../store/lists\";\r\nimport { setPopup } from \"../store/popup\";\r\nimport { Flex, FlexPart } from \"../style\";\r\nimport { HistoryFormData } from \"./HistoryFormData\";\r\nimport { clearForm, setForm } from \"../store/form\";\r\nimport { setLoading } from \"../store/loading\";\r\nimport { apiFetchMyListsDelete } from \"../api\";\r\n\r\nexport const MyListElementContent = ({ item, setData, index, type }: any) => {\r\n  const [active, setActive] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  function navOrder() {\r\n    dispatch(replaceCart(item.food));\r\n    if (item.orderData)\r\n      dispatch(setForm({ upgr: \"all\", value: item.orderData }));\r\n    else {\r\n      dispatch(clearForm());\r\n    }\r\n\r\n    navigate(\"/OrderTransaction\");\r\n  }\r\n  function navHome() {\r\n    dispatch(replaceCart(item.food));\r\n    navigate(\"/\");\r\n  }\r\n  function deleteList() {\r\n    setActive(false);\r\n    dispatch(setLoading(true));\r\n    apiFetchMyListsDelete(12)\r\n      .then((result) => {\r\n        if (result !== null) {\r\n          dispatch(setMyLists(result.myLists));\r\n          dispatch(reset());\r\n        }\r\n        setTimeout(() => {\r\n          dispatch(setLoading(false));\r\n        }, 1000);\r\n      })\r\n      .catch((e: any) => null);\r\n    dispatch(deleteMyListElement(index));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListHandleBox theme={active}>\r\n        <ListHandleButtonBox onClick={() => setActive(!active)}>\r\n          <FlexPart theme={1}>\r\n            <SerifText> {item.title}</SerifText>\r\n          </FlexPart>\r\n          <FlexPart theme={1}>\r\n            <SerifText> {item?.date}</SerifText>\r\n            <SerifText> {item?.time}</SerifText>\r\n          </FlexPart>\r\n          <SerifText>\r\n            {getString(\"other\", \"value\")} {priceAll(item.food)}$\r\n          </SerifText>\r\n        </ListHandleButtonBox>\r\n        {active ? (\r\n          <>\r\n            <ListFoodBox style={{ padding: \"10px 10px 10px 0px\" }}>\r\n              <FlexPart\r\n                theme={3}\r\n                style={{\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n              >\r\n                {generateList(item.food, setData, \"mode\")}\r\n              </FlexPart>\r\n              {type === \"history\" ? (\r\n                <FlexPart theme={2}>\r\n                  <HistoryFormData {...item.orderData} />\r\n                </FlexPart>\r\n              ) : null}\r\n            </ListFoodBox>\r\n            <ListButtonBox>\r\n              <GrayButton onClick={() => navOrder()}>\r\n                <ButtonText>{getString(\"buttons\", \"order\")}</ButtonText>\r\n              </GrayButton>\r\n              <GrayButton onClick={() => navHome()}>\r\n                <ButtonText>{getString(\"buttons\", \"addToCart\")}</ButtonText>\r\n              </GrayButton>\r\n              {type === \"history\" ? null : (\r\n                <GrayButton\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      setPopup({\r\n                        message: \"areYouSureDelete\",\r\n                        type: \"confirm\",\r\n                        onConfirm: () => deleteList(),\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <ButtonText>{getString(\"buttons\", \"delete\")}</ButtonText>\r\n                </GrayButton>\r\n              )}\r\n            </ListButtonBox>\r\n          </>\r\n        ) : null}\r\n      </ListHandleBox>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}