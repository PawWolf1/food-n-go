{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\Form.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { inputDataPersonal, orderForm } from \"../styles/Constants\";\nimport { setInputs } from \"./functions/setInputsToForm\";\nimport { popupBlock } from \"./PopupBlock\";\nimport { GridBox2 } from \"../style\";\nimport { FormBox } from \"../styles/OrderTrans\";\nimport { GrayButtonInput } from \"../styles/Input\";\nimport { InputSectionText } from \"../styles/TextStyles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Form = _ref => {\n  _s();\n  let {\n    xxx\n  } = _ref;\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(getValues);\n  const [popup, setPopup] = useState({\n    isActive: false,\n    variant: \"\"\n  });\n  console.log(inputDataPersonal);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [popupBlock(popup, handleSubmit(onSubmit), register, setPopup), /*#__PURE__*/_jsxDEV(GridBox2, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [orderForm.data.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [console.log(item.section), /*#__PURE__*/_jsxDEV(InputSectionText, {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormBox, {\n          children: setInputs(item.section, register, setPopup, errors)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(GrayButtonInput, {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"xEQySBlMVLvx9+4V4FCeKqlakZI=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","useForm","inputDataPersonal","orderForm","setInputs","popupBlock","GridBox2","FormBox","GrayButtonInput","InputSectionText","Form","xxx","register","setValue","handleSubmit","getValues","formState","errors","onSubmit","data","console","log","popup","setPopup","isActive","variant","map","item","section","title"],"sources":["C:/foodngo/src/components/Form.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n  orderForm,\r\n} from \"../styles/Constants\";\r\nimport { setInputs } from \"./functions/setInputsToForm\";\r\nimport { popupBlock } from \"./PopupBlock\";\r\nimport { GridBox2 } from \"../style\";\r\nimport { FormBox, FormSpecialBox } from \"../styles/OrderTrans\";\r\nimport { GrayButtonInput } from \"../styles/Input\";\r\nimport { InputSectionText } from \"../styles/TextStyles\";\r\n\r\nexport const Form = ({ xxx }: any) => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm<typeof xxx>();\r\n  const onSubmit = (data: any) => console.log(getValues);\r\n  const [popup, setPopup] = useState({ isActive: false, variant: \"\" });\r\n  console.log(inputDataPersonal);\r\n\r\n  return (\r\n    <>\r\n      {popupBlock(popup, handleSubmit(onSubmit), register, setPopup)}\r\n      <GridBox2 onSubmit={handleSubmit(onSubmit)}>\r\n        {orderForm.data.map((item) => (\r\n          <>\r\n            {console.log(item.section)}\r\n            <InputSectionText>{item.title}</InputSectionText>\r\n            <FormBox>\r\n              {setInputs(item.section, register, setPopup, errors)}\r\n            </FormBox>\r\n          </>\r\n        ))}\r\n        <GrayButtonInput type=\"submit\" />\r\n      </GridBox2>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAGEC,iBAAiB,EAEjBC,SAAS,QACJ,qBAAqB;AAC5B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,UAAU;AACnC,SAASC,OAAO,QAAwB,sBAAsB;AAC9D,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,gBAAgB,QAAQ,sBAAsB;AAAC;AAAA;AAExD,OAAO,MAAMC,IAAI,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGhB,OAAO,EAAc;EACzB,MAAMiB,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACtD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,QAAQ,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACpEL,OAAO,CAACC,GAAG,CAACnB,iBAAiB,CAAC;EAE9B,oBACE;IAAA,WACGG,UAAU,CAACiB,KAAK,EAAER,YAAY,CAACI,QAAQ,CAAC,EAAEN,QAAQ,EAAEW,QAAQ,CAAC,eAC9D,QAAC,QAAQ;MAAC,QAAQ,EAAET,YAAY,CAACI,QAAQ,CAAE;MAAA,WACxCf,SAAS,CAACgB,IAAI,CAACO,GAAG,CAAEC,IAAI,iBACvB;QAAA,WACGP,OAAO,CAACC,GAAG,CAACM,IAAI,CAACC,OAAO,CAAC,eAC1B,QAAC,gBAAgB;UAAA,UAAED,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAoB,eACjD,QAAC,OAAO;UAAA,UACLzB,SAAS,CAACuB,IAAI,CAACC,OAAO,EAAEhB,QAAQ,EAAEW,QAAQ,EAAEN,MAAM;QAAC;UAAA;UAAA;UAAA;QAAA,QAC5C;MAAA,gBAEb,CAAC,eACF,QAAC,eAAe;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA,gBACV;AAEP,CAAC;AAAC,GA7BWP,IAAI;EAAA,QAOXT,OAAO;AAAA;AAAA,KAPAS,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}