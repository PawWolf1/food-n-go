{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\MyListElementContent.tsx\",\n  _s = $RefreshSig$();\nimport { GrayButton } from \"../styles/Buttons\";\nimport { ListFoodBox, ListButtonBox } from \"../styles/MyLists\";\nimport { ButtonText } from \"../styles/TextStyles\";\nimport { generateList } from \"./functions/itemList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyListElementContent = _ref => {\n  _s();\n  let {\n    item,\n    setData\n  } = _ref;\n  const [active, setAvtive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: active ? /*#__PURE__*/_jsxDEV(ListFoodBox, {\n      style: {\n        padding: \"10px 10px 10px 0px\"\n      },\n      children: [generateList(item, setData, \"mode\"), /*#__PURE__*/_jsxDEV(ListButtonBox, {\n        children: [/*#__PURE__*/_jsxDEV(GrayButton, {\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n_s(MyListElementContent, \"yo9GNZ9pLFJRXQSb9fnl4Knq98Y=\");\n_c = MyListElementContent;\nfunction useState(arg0) {\n  throw new Error(\"Function not implemented.\");\n}\nvar _c;\n$RefreshReg$(_c, \"MyListElementContent\");","map":{"version":3,"names":["GrayButton","ListFoodBox","ListButtonBox","ButtonText","generateList","MyListElementContent","item","setData","active","setAvtive","useState","padding","arg0","Error"],"sources":["C:/foodngo/src/components/MyListElementContent.tsx"],"sourcesContent":["import { GrayButton } from \"../styles/Buttons\";\r\nimport { ListFoodBox, ListButtonBox } from \"../styles/MyLists\";\r\nimport { ButtonText } from \"../styles/TextStyles\";\r\nimport { List1 } from \"../testData/FoodData\";\r\nimport { generateList } from \"./functions/itemList\";\r\n\r\nexport const MyListElementContent = ({ item, setData }: any) => {\r\n  const [active, setAvtive] = useState<boolean>(false);\r\n  return (\r\n    <>\r\n      {active ? (\r\n        <ListFoodBox style={{ padding: \"10px 10px 10px 0px\" }}>\r\n          {generateList(item, setData, \"mode\")}\r\n          <ListButtonBox>\r\n            <GrayButton>\r\n              <ButtonText>Delete</ButtonText>\r\n            </GrayButton>\r\n            <GrayButton>\r\n              <ButtonText>Order</ButtonText>\r\n            </GrayButton>\r\n            <GrayButton>\r\n              <ButtonText>test</ButtonText>\r\n            </GrayButton>\r\n          </ListButtonBox>\r\n        </ListFoodBox>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction useState<T>(arg0: boolean): [any, any] {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,WAAW,EAAEC,aAAa,QAAQ,mBAAmB;AAC9D,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,YAAY,QAAQ,sBAAsB;AAAC;AAAA;AAEpD,OAAO,MAAMC,oBAAoB,GAAG,QAA4B;EAAA;EAAA,IAA3B;IAAEC,IAAI;IAAEC;EAAa,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAU,KAAK,CAAC;EACpD,oBACE;IAAA,UACGF,MAAM,gBACL,QAAC,WAAW;MAAC,KAAK,EAAE;QAAEG,OAAO,EAAE;MAAqB,CAAE;MAAA,WACnDP,YAAY,CAACE,IAAI,EAAEC,OAAO,EAAE,MAAM,CAAC,eACpC,QAAC,aAAa;QAAA,wBACZ,QAAC,UAAU;UAAA,uBACT,QAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAoB;UAAA;UAAA;UAAA;QAAA,QACpB,eACb,QAAC,UAAU;UAAA,uBACT,QAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAmB;UAAA;UAAA;UAAA;QAAA,QACnB,eACb,QAAC,UAAU;UAAA,uBACT,QAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAkB;UAAA;UAAA;UAAA;QAAA,QAClB;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,GACZ;EAAI,iBACP;AAEP,CAAC;AAAC,GAtBWF,oBAAoB;AAAA,KAApBA,oBAAoB;AAwBjC,SAASK,QAAQ,CAAIE,IAAa,EAAc;EAC9C,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;AAC9C;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}