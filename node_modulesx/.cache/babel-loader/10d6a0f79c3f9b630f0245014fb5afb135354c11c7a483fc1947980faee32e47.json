{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\nimport counterReducer from \"./data\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nconst reducers = {\n  counter: counterReducer\n};\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconfiler: autoMergeLevel2,\n  blacklist: [\"counter\"]\n};\nconst rootReducer = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport function expConfigureStore() {\n  return configureStore({\n    reducer: persistedReducer,\n    devTools: process.env.NODE_ENV !== \"production\",\n    middleware: [thunk]\n  });\n}","map":{"version":3,"names":["combineReducers","configureStore","autoMergeLevel2","counterReducer","persistReducer","storage","thunk","reducers","counter","persistConfig","key","stateReconfiler","blacklist","rootReducer","persistedReducer","expConfigureStore","reducer","devTools","process","env","NODE_ENV","middleware"],"sources":["C:/foodngo/src/store/store.tsx"],"sourcesContent":["import { combineReducers, configureStore, createStore } from \"@reduxjs/toolkit\";\r\nimport autoMergeLevel2 from \"redux-persist/es/stateReconciler/autoMergeLevel2\";\r\nimport counterReducer from \"./data\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = {\r\n  counter: counterReducer,\r\n};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  stateReconfiler: autoMergeLevel2,\r\n  blacklist: [\"counter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport function expConfigureStore() {\r\n  return configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n    middleware: [thunk],\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAqB,kBAAkB;AAC/E,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,OAAOC,cAAc,MAAM,QAAQ;AACnC,SAAuBC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAEL;AACX,CAAC;AAED,MAAMM,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXL,OAAO;EACPM,eAAe,EAAET,eAAe;EAChCU,SAAS,EAAE,CAAC,SAAS;AACvB,CAAC;AAED,MAAMC,WAAW,GAAGb,eAAe,CAACO,QAAQ,CAAC;AAC7C,MAAMO,gBAAgB,GAAGV,cAAc,CAACK,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,SAASE,iBAAiB,GAAG;EAClC,OAAOd,cAAc,CAAC;IACpBe,OAAO,EAAEF,gBAAgB;IACzBG,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;IAC/CC,UAAU,EAAE,CAACf,KAAK;EACpB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}