{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\forms\\\\FormNewList.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { newListData } from \"../../styles/Constants\";\nimport { setSingleInput } from \"../functions/setInputsToForm\";\nimport { Flex } from \"../../style\";\nimport { GrayButtonLogin } from \"../../styles/Input\";\nimport { GrayButtonPopup } from \"../../styles/Buttons\";\nimport { LoginBox } from \"../../styles/Header\";\nimport { getString } from \"../../locales/languages/string\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormInput = () => {\n  _s();\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(getValues());\n  const [popup, setPopup] = useState({\n    isActive: false,\n    variant: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(LoginBox, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: setSingleInput(newListData.data[0], register, setPopup)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(GrayButtonLogin, {\n        type: \"submit\",\n        value: \"Login\",\n        onClick: handleSubmit(onSubmit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrayButtonPopup\n      // onClick={() => props?.setPopup({ isActive: false, type: \"Yiked2\" })}\n      , {\n        onClick: () => props.functionOn(),\n        children: getString(\"buttons\", \"yes\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"ExYi05HKn9hopFmQgcN6y1P5yic=\", false, function () {\n  return [useForm];\n});\n_c = FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["useState","useForm","newListData","setSingleInput","Flex","GrayButtonLogin","GrayButtonPopup","LoginBox","getString","FormInput","register","setValue","handleSubmit","getValues","formState","errors","onSubmit","data","console","log","popup","setPopup","isActive","variant","props","functionOn"],"sources":["C:/foodngo/src/components/forms/FormNewList.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n  loginData,\r\n  newListData,\r\n} from \"../../styles/Constants\";\r\nimport { setInputs, setSingleInput } from \"../functions/setInputsToForm\";\r\nimport { Flex, GridBox2 } from \"../../style\";\r\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\r\nimport { GrayButtonInput, GrayButtonLogin } from \"../../styles/Input\";\r\nimport {\r\n  ButtonText,\r\n  InputSectionText,\r\n  SerifText,\r\n} from \"../../styles/TextStyles\";\r\nimport { GrayButton, GrayButtonPopup } from \"../../styles/Buttons\";\r\nimport { LoginBox } from \"../../styles/Header\";\r\nimport { getString } from \"../../locales/languages/string\";\r\n\r\nexport const FormInput = () => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm<FormData>();\r\n  const onSubmit = (data: any) => console.log(getValues());\r\n  const [popup, setPopup] = useState({\r\n    isActive: false,\r\n    variant: \"\",\r\n  });\r\n\r\n  return (\r\n    <LoginBox>\r\n      <>{setSingleInput(newListData.data[0], register, setPopup)}</>\r\n\r\n      <Flex>\r\n        <GrayButtonLogin\r\n          type=\"submit\"\r\n          value={\"Login\"}\r\n          onClick={handleSubmit(onSubmit)}\r\n        />\r\n        <GrayButtonPopup\r\n          // onClick={() => props?.setPopup({ isActive: false, type: \"Yiked2\" })}\r\n          onClick={() => props.functionOn()}\r\n        >\r\n          {getString(\"buttons\", \"yes\")}\r\n        </GrayButtonPopup>\r\n      </Flex>\r\n    </LoginBox>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAMEC,WAAW,QACN,wBAAwB;AAC/B,SAAoBC,cAAc,QAAQ,8BAA8B;AACxE,SAASC,IAAI,QAAkB,aAAa;AAE5C,SAA0BC,eAAe,QAAQ,oBAAoB;AAMrE,SAAqBC,eAAe,QAAQ,sBAAsB;AAClE,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,SAAS,QAAQ,gCAAgC;AAAC;AAAA;AAE3D,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGd,OAAO,EAAY;EACvB,MAAMe,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACN,SAAS,EAAE,CAAC;EACxD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC;IACjCsB,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAA,UAAGpB,cAAc,CAACD,WAAW,CAACe,IAAI,CAAC,CAAC,CAAC,EAAEP,QAAQ,EAAEW,QAAQ;IAAC,iBAAI,eAE9D,QAAC,IAAI;MAAA,wBACH,QAAC,eAAe;QACd,IAAI,EAAC,QAAQ;QACb,KAAK,EAAE,OAAQ;QACf,OAAO,EAAET,YAAY,CAACI,QAAQ;MAAE;QAAA;QAAA;QAAA;MAAA,QAChC,eACF,QAAC;MACC;MAAA;QACA,OAAO,EAAE,MAAMQ,KAAK,CAACC,UAAU,EAAG;QAAA,UAEjCjB,SAAS,CAAC,SAAS,EAAE,KAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEf,CAAC;AAAC,GAjCWC,SAAS;EAAA,QAOhBR,OAAO;AAAA;AAAA,KAPAQ,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}