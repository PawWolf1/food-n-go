{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\OrderTransactionSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { InputTitleText } from \"../../styles/TextStyles\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { Input } from \"../Input\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderTransactionSub = _ref => {\n  _s();\n  var _errors$firstName, _errors$mail;\n  let {\n    data\n  } = _ref;\n  const [cart, setCart] = useState(data ? data : []);\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart === null || cart === void 0 ? void 0 : cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  function setInputs(data) {\n    return data.data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 10px 30px 10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        register: (register(item.value), {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), errors.streetName && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }, this), errors.city && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  }\n  // const {\n  //   register,\n  //   setValue,\n  //   handleSubmit,\n  //   formState: { errors },\n  // } = useForm<FormData>();\n  // const onSubmit = (data: any) => console.log(data);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"firstName\", {\n        required: true\n      }),\n      \"aria-invalid\": errors.firstName ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), ((_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: \"First name is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ...register(\"mail\", {\n        required: \"Email Address is required\"\n      }),\n      \"aria-invalid\": errors.mail ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), errors.mail && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: (_errors$mail = errors.mail) === null || _errors$mail === void 0 ? void 0 : _errors$mail.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n  // return (\n  //   <>\n  //     <GridBox theme={{ width: windowSize.innerWidth }}>\n  //       <form onSubmit={handleSubmit(onSubmit)}>\n  //         <InputSectionText>{Constants.forms.deliveryData}</InputSectionText>\n  //         <FormBox>{setInputs(inputDataDelivery)}</FormBox>\n  //         <InputSectionText>{Constants.forms.deliveryTime}</InputSectionText>\n  //         <FormBox>{setInputs(inputDataPersonal)}</FormBox>\n  //         <FormSpecialBox>{setInputs(inputDataSpecial)}</FormSpecialBox>\n  //         <input type=\"submit\" />\n  //       </form>\n  //     </GridBox>\n  //     <SummaryBox\n  //       theme={{\n  //         width: windowSize.innerWidth,\n  //       }}\n  //     >\n  //       <SummaryList data={data} />\n  //     </SummaryBox>\n  //   </>\n  // );\n};\n_s(OrderTransactionSub, \"jcI4HF2NLWOgv3Y5ueX4/t7Okn0=\", false, function () {\n  return [useForm];\n});\n_c = OrderTransactionSub;\nvar _c;\n$RefreshReg$(_c, \"OrderTransactionSub\");","map":{"version":3,"names":["useState","useEffect","InputTitleText","moveCartSlider","Input","useForm","OrderTransactionSub","data","cart","setCart","windowSize","setWindowSize","getWindowSize","innerWidth","innerHeight","window","handleWindowResize","addEventListener","length","removeEventListener","setInputs","map","item","index","margin","title","register","value","required","errors","streetName","city","formState","handleSubmit","onSubmit","console","log","firstName","type","mail","message"],"sources":["C:/foodngo/src/components/subScreens/OrderTransactionSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Food } from \"../../models/Food\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  InputDataI,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n  InputsI,\r\n} from \"../../styles/Constants\";\r\nimport {\r\n  FormBox,\r\n  FormSpecialBox,\r\n  GridBox,\r\n  SectionFormTitleBox,\r\n  SummaryBox,\r\n  TestListElementBox,\r\n} from \"../../styles/OrderTrans\";\r\nimport {\r\n  InputSectionText,\r\n  InputTitleText,\r\n  SerifText,\r\n  SerifTextL,\r\n} from \"../../styles/TextStyles\";\r\nimport { FoodData } from \"../../testData/FoodData\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { priceAll } from \"../functions/priceAll\";\r\nimport { Input } from \"../Input\";\r\nimport { SummaryList } from \"../SummaryList\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const OrderTransactionSub = ({ data }: any) => {\r\n  const [cart, setCart] = useState<Food[]>(data ? data : []);\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n  function getWindowSize() {\r\n    const { innerWidth, innerHeight } = window;\r\n    return { innerWidth, innerHeight };\r\n  }\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart?.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  function setInputs(data: InputsI) {\r\n    return data.data.map((item, index) => (\r\n      <div\r\n        style={{\r\n          margin: \"30px 10px 30px 10px\",\r\n        }}\r\n      >\r\n        <InputTitleText>{item.title}</InputTitleText>\r\n        <Input register={(register(item.value), { required: true })} />\r\n        {errors.streetName && <span>This field is required</span>}\r\n        {errors.city && <span>This field is required</span>}\r\n      </div>\r\n    ));\r\n  }\r\n  // const {\r\n  //   register,\r\n  //   setValue,\r\n  //   handleSubmit,\r\n  //   formState: { errors },\r\n  // } = useForm<FormData>();\r\n  // const onSubmit = (data: any) => console.log(data);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n  } = useForm();\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input\r\n        {...register(\"firstName\", { required: true })}\r\n        aria-invalid={errors.firstName ? \"true\" : \"false\"}\r\n      />\r\n      {errors.firstName?.type === \"required\" && (\r\n        <p role=\"alert\">First name is required</p>\r\n      )}\r\n\r\n      <input\r\n        {...register(\"mail\", { required: \"Email Address is required\" })}\r\n        aria-invalid={errors.mail ? \"true\" : \"false\"}\r\n      />\r\n      {errors.mail && <p role=\"alert\">{errors.mail?.message}</p>}\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n  // return (\r\n  //   <>\r\n  //     <GridBox theme={{ width: windowSize.innerWidth }}>\r\n  //       <form onSubmit={handleSubmit(onSubmit)}>\r\n  //         <InputSectionText>{Constants.forms.deliveryData}</InputSectionText>\r\n  //         <FormBox>{setInputs(inputDataDelivery)}</FormBox>\r\n  //         <InputSectionText>{Constants.forms.deliveryTime}</InputSectionText>\r\n  //         <FormBox>{setInputs(inputDataPersonal)}</FormBox>\r\n  //         <FormSpecialBox>{setInputs(inputDataSpecial)}</FormSpecialBox>\r\n  //         <input type=\"submit\" />\r\n  //       </form>\r\n  //     </GridBox>\r\n  //     <SummaryBox\r\n  //       theme={{\r\n  //         width: windowSize.innerWidth,\r\n  //       }}\r\n  //     >\r\n  //       <SummaryList data={data} />\r\n  //     </SummaryBox>\r\n  //   </>\r\n  // );\r\n};\r\n\r\nexport interface FormData {\r\n  streetName: string;\r\n  city: string;\r\n  houseNumber: string;\r\n  flatNumber: string;\r\n  postcode: string;\r\n  accessCode?: string;\r\n  floor?: string;\r\n  companyName?: string;\r\n  note?: string;\r\n  firstLastName: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  deliveryTime: string;\r\n  payWith: string;\r\n  voutcher?: string;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}