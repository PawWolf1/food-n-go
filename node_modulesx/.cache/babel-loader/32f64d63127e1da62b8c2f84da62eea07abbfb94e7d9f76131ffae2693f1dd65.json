{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\subScreens\\\\OrderTransactionSub.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { GridBox, SummaryBox } from \"../../styles/OrderTrans\";\nimport { InputTitleText } from \"../../styles/TextStyles\";\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\nimport { Input } from \"../Input\";\nimport { SummaryList } from \"../SummaryList\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OrderTransactionSub = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [cart, setCart] = useState(data ? data : []);\n  const [windowSize, setWindowSize] = useState(getWindowSize());\n  function getWindowSize() {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    return {\n      innerWidth,\n      innerHeight\n    };\n  }\n  useEffect(() => {\n    function handleWindowResize() {\n      setWindowSize(getWindowSize());\n    }\n    window.addEventListener(\"resize\", handleWindowResize);\n    moveCartSlider(cart === null || cart === void 0 ? void 0 : cart.length);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [cart]);\n  function setInputs(data) {\n    return data.data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 10px 30px 10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputTitleText, {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        data: data,\n        ...register(\"payWith\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n  }\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = handleSubmit(data => console.log(data));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridBox, {\n      theme: {\n        width: windowSize.innerWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"postcode\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"deliveryTime\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            setValue(\"postcode\", \"luo\"); // ✅\n            setValue(\"deliveryTime\", true); // ❌: true is not string\n            // errors.bill; // ❌: property bill does not exist\n          },\n          children: \"SetValue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SummaryBox, {\n      theme: {\n        width: windowSize.innerWidth\n      },\n      children: /*#__PURE__*/_jsxDEV(SummaryList, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(OrderTransactionSub, \"CewUfQheQ15YwxrhQbKDLIHl+6Y=\", false, function () {\n  return [useForm];\n});\n_c = OrderTransactionSub;\nvar _c;\n$RefreshReg$(_c, \"OrderTransactionSub\");","map":{"version":3,"names":["useState","useEffect","GridBox","SummaryBox","InputTitleText","moveCartSlider","Input","SummaryList","useForm","OrderTransactionSub","data","cart","setCart","windowSize","setWindowSize","getWindowSize","innerWidth","innerHeight","window","handleWindowResize","addEventListener","length","removeEventListener","setInputs","map","item","index","margin","title","register","setValue","handleSubmit","formState","errors","onSubmit","console","log","width"],"sources":["C:/foodngo/src/components/subScreens/OrderTransactionSub.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Food } from \"../../models/Food\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  InputDataI,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n  InputsI,\r\n} from \"../../styles/Constants\";\r\nimport {\r\n  FormBox,\r\n  FormSpecialBox,\r\n  GridBox,\r\n  SectionFormTitleBox,\r\n  SummaryBox,\r\n  TestListElementBox,\r\n} from \"../../styles/OrderTrans\";\r\nimport {\r\n  InputSectionText,\r\n  InputTitleText,\r\n  SerifText,\r\n  SerifTextL,\r\n} from \"../../styles/TextStyles\";\r\nimport { FoodData } from \"../../testData/FoodData\";\r\nimport { moveCartSlider } from \"../functions/moveCartSlider\";\r\nimport { priceAll } from \"../functions/priceAll\";\r\nimport { Input } from \"../Input\";\r\nimport { SummaryList } from \"../SummaryList\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const OrderTransactionSub = ({ data }: any) => {\r\n  const [cart, setCart] = useState<Food[]>(data ? data : []);\r\n  const [windowSize, setWindowSize] = useState(getWindowSize());\r\n  function getWindowSize() {\r\n    const { innerWidth, innerHeight } = window;\r\n    return { innerWidth, innerHeight };\r\n  }\r\n  useEffect(() => {\r\n    function handleWindowResize() {\r\n      setWindowSize(getWindowSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    moveCartSlider(cart?.length);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, [cart]);\r\n\r\n  function setInputs(data: InputsI) {\r\n    return data.data.map((item, index) => (\r\n      <div\r\n        style={{\r\n          margin: \"30px 10px 30px 10px\",\r\n        }}\r\n      >\r\n        <InputTitleText>{item.title}</InputTitleText>\r\n        <Input data={data} {...register(\"payWith\")} />\r\n      </div>\r\n    ));\r\n  }\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormData>();\r\n  const onSubmit = handleSubmit((data: any) => console.log(data));\r\n  return (\r\n    <>\r\n      <GridBox theme={{ width: windowSize.innerWidth }}>\r\n        {/* <form onSubmit={handleSubmit(onSubmit)}>\r\n          <InputSectionText>{Constants.forms.deliveryData}</InputSectionText>\r\n          <FormBox>{setInputs(inputDataDelivery)}</FormBox>\r\n          <InputSectionText>{Constants.forms.deliveryTime}</InputSectionText>\r\n          <FormBox>{setInputs(inputDataPersonal)}</FormBox>\r\n          <FormSpecialBox>{setInputs(inputDataSpecial)}</FormSpecialBox>\r\n          <input type=\"submit\" />\r\n        </form> */}\r\n        <form onSubmit={onSubmit}>\r\n          <label>First Name</label>\r\n          <input {...register(\"postcode\")} />\r\n          <label>Last Name</label>\r\n          <input {...register(\"deliveryTime\")} />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setValue(\"postcode\", \"luo\"); // ✅\r\n              setValue(\"deliveryTime\", true); // ❌: true is not string\r\n              // errors.bill; // ❌: property bill does not exist\r\n            }}\r\n          >\r\n            SetValue\r\n          </button>\r\n        </form>\r\n      </GridBox>\r\n      <SummaryBox\r\n        theme={{\r\n          width: windowSize.innerWidth,\r\n        }}\r\n      >\r\n        <SummaryList data={data} />\r\n      </SummaryBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport interface FormData {\r\n  streetName: string;\r\n  city: string;\r\n  houseNumber: string;\r\n  flatNumber: string;\r\n  postcode: string;\r\n  accessCode?: string;\r\n  floor?: string;\r\n  companyName?: string;\r\n  note?: string;\r\n  firstLastName: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  deliveryTime: string;\r\n  payWith: string;\r\n  voutcher?: string;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}