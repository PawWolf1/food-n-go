{"ast":null,"code":"const requestHeaders = new Headers();\nrequestHeaders.set(\"Content-Type\", \"application/json\");\n/*\r\nfunction apiAddToLog() {\r\n\tconst timestamp: string = new Date().toLocaleTimeString();\r\n}\r\n*/\n\nexport async function apiFetchProducts() {\n  try {\n    const response = await fetch(\"http://localhost:3000/food\", {\n      method: \"GET\",\n      headers: requestHeaders\n    });\n    if (response.ok) {\n      const products = await response.json();\n      return {\n        food\n      };\n    } else {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n  } catch (error) {\n    return {\n      error\n    };\n  }\n}","map":{"version":3,"names":["requestHeaders","Headers","set","apiFetchProducts","response","fetch","method","headers","ok","products","json","food","Error","status","statusText","error"],"sources":["C:/foodngo/src/server/index.js"],"sourcesContent":["const requestHeaders = new Headers();\r\nrequestHeaders.set(\"Content-Type\", \"application/json\");\r\n/*\r\nfunction apiAddToLog() {\r\n\tconst timestamp: string = new Date().toLocaleTimeString();\r\n}\r\n*/\r\n\r\nexport async function apiFetchProducts(): any {\r\n\ttry {\r\n\t\tconst response = await fetch(\"http://localhost:3000/food\", {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: requestHeaders\r\n\t\t});\r\n\t\tif (response.ok) {\r\n\t\t\tconst products: any = await response.json();\r\n\t\t\treturn { food };\r\n\t\t} else {\r\n\t\t\tthrow new Error(`${response.status} - ${response.statusText}`);\r\n\t\t}\r\n\t} catch (error) {\r\n\t\treturn { error };\r\n\t}\r\n}"],"mappings":"AAAA,MAAMA,cAAc,GAAG,IAAIC,OAAO,EAAE;AACpCD,cAAc,CAACE,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;AACtD;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,gBAAgB,GAAQ;EAC7C,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MAC1DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEP;IACV,CAAC,CAAC;IACF,IAAII,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAMC,QAAa,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAC3C,OAAO;QAAEC;MAAK,CAAC;IAChB,CAAC,MAAM;MACN,MAAM,IAAIC,KAAK,CAAE,GAAER,QAAQ,CAACS,MAAO,MAAKT,QAAQ,CAACU,UAAW,EAAC,CAAC;IAC/D;EACD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACf,OAAO;MAAEA;IAAM,CAAC;EACjB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}