{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  data: {\n    accessCode: \"\",\n    city: \"\",\n    companyName: \"\",\n    deliveryTime: \"\",\n    firstLastName: \"\",\n    floor: \"\",\n    email: \"\",\n    flatNumber: \"\",\n    houseNumber: \"\",\n    payWith: \"\",\n    phoneNumber: \"\",\n    postcode: \"\",\n    streetName: \"\",\n    note: \"\",\n    voutcher: \"\"\n  }\n};\nexport const formSlice = createSlice({\n  name: \"form\",\n  initialState,\n  reducers: {\n    setForm: (state, action) => {\n      let newState = Object.assign({}, state);\n      switch (action.payload.upgr) {\n        case `accessCode`:\n        case `city`:\n        case `companyName`:\n        case `deliveryTime`:\n        case `firstLastName`:\n        case `floor`:\n        case `email`:\n        case `flatNumber`:\n        case `houseNumber`:\n        case `payWith`:\n        case `phoneNumber`:\n        case `postcode`:\n        case `streetName`:\n        case `note`:\n        case `voutcher`:\n      }\n    },\n    setAccess: (state, action) => {\n      state.data[\"accessCode\"] = action.payload;\n    },\n    clearForm: state => {\n      state.data = initialState.data;\n    }\n  }\n});\nexport const {\n  clearForm,\n  setForm\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","data","accessCode","city","companyName","deliveryTime","firstLastName","floor","email","flatNumber","houseNumber","payWith","phoneNumber","postcode","streetName","note","voutcher","formSlice","name","reducers","setForm","state","action","newState","Object","assign","payload","upgr","setAccess","clearForm","actions","reducer"],"sources":["C:/foodngo/src/store/form.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport interface FormI {\r\n  data: {\r\n    accessCode: string;\r\n    city: string;\r\n    companyName: string;\r\n    deliveryTime: string;\r\n    firstLastName: string;\r\n    floor: string;\r\n    email: string;\r\n    flatNumber: string;\r\n    houseNumber: string;\r\n    payWith: string;\r\n    phoneNumber: string;\r\n    postcode: string;\r\n    streetName: string;\r\n    note: string;\r\n    voutcher: string;\r\n  };\r\n}\r\n\r\nconst initialState: FormI = {\r\n  data: {\r\n    accessCode: \"\",\r\n    city: \"\",\r\n    companyName: \"\",\r\n    deliveryTime: \"\",\r\n    firstLastName: \"\",\r\n    floor: \"\",\r\n    email: \"\",\r\n    flatNumber: \"\",\r\n    houseNumber: \"\",\r\n    payWith: \"\",\r\n    phoneNumber: \"\",\r\n    postcode: \"\",\r\n    streetName: \"\",\r\n    note: \"\",\r\n    voutcher: \"\",\r\n  },\r\n};\r\nexport const formSlice = createSlice({\r\n  name: \"form\",\r\n  initialState,\r\n  reducers: {\r\n    setForm: (state, action) => {\r\n      let newState = Object.assign({}, state);\r\n      switch (action.payload.upgr) {\r\n        case `accessCode`:\r\n\r\n        case `city`:\r\n        case `companyName`:\r\n        case `deliveryTime`:\r\n        case `firstLastName`:\r\n        case `floor`:\r\n        case `email`:\r\n        case `flatNumber`:\r\n        case `houseNumber`:\r\n        case `payWith`:\r\n        case `phoneNumber`:\r\n        case `postcode`:\r\n        case `streetName`:\r\n        case `note`:\r\n        case `voutcher`:\r\n      }\r\n    },\r\n    setAccess: (state, action) => {\r\n      state.data[\"accessCode\"] = action.payload;\r\n    },\r\n    clearForm: (state) => {\r\n      state.data = initialState.data;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { clearForm, setForm } = formSlice.actions;\r\n\r\nexport default formSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAsB9C,MAAMC,YAAmB,GAAG;EAC1BC,IAAI,EAAE;IACJC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ;AACF,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EACnCmB,IAAI,EAAE,MAAM;EACZlB,YAAY;EACZmB,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,IAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,CAAC;MACvC,QAAQC,MAAM,CAACI,OAAO,CAACC,IAAI;QACzB,KAAM,YAAW;QAEjB,KAAM,MAAK;QACX,KAAM,aAAY;QAClB,KAAM,cAAa;QACnB,KAAM,eAAc;QACpB,KAAM,OAAM;QACZ,KAAM,OAAM;QACZ,KAAM,YAAW;QACjB,KAAM,aAAY;QAClB,KAAM,SAAQ;QACd,KAAM,aAAY;QAClB,KAAM,UAAS;QACf,KAAM,YAAW;QACjB,KAAM,MAAK;QACX,KAAM,UAAS;MAAC;IAEpB,CAAC;IACDC,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACpB,IAAI,CAAC,YAAY,CAAC,GAAGqB,MAAM,CAACI,OAAO;IAC3C,CAAC;IACDG,SAAS,EAAGR,KAAK,IAAK;MACpBA,KAAK,CAACpB,IAAI,GAAGD,YAAY,CAACC,IAAI;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAE4B,SAAS;EAAET;AAAQ,CAAC,GAAGH,SAAS,CAACa,OAAO;AAEvD,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}