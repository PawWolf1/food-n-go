{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\forms\\\\FormLogin.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { loginData } from \"../../styles/Constants\";\nimport { setSingleInput } from \"../functions/setInputsToForm\";\nimport { GrayButtonInput } from \"../../styles/Input\";\nimport { LoginBox } from \"../../styles/Header\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormLogin = () => {\n  _s();\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(getValues);\n  const [popup, setPopup] = useState({\n    isActive: false,\n    variant: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(LoginBox, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: setSingleInput(loginData.data[0], register, setPopup)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: setSingleInput(loginData.data[1], register, setPopup)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(GrayButtonInput, {\n      type: \"submit\",\n      style: {\n        margin: \"10px 0 0 0\",\n        height: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(FormLogin, \"xEQySBlMVLvx9+4V4FCeKqlakZI=\", false, function () {\n  return [useForm];\n});\n_c = FormLogin;\n{\n  /* <GridBox2 onSubmit={handleSubmit(onSubmit)}>\r\n  <>{setInputs(loginData, register, setPopup, errors)}</>\r\n  <>{setInputs(passwordData, register, setPopup, errors)}</FormBox>\r\n  <GrayButtonInput type=\"submit\" />\r\n  </GridBox2> */\n}\nvar _c;\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"names":["useState","useForm","loginData","setSingleInput","GrayButtonInput","LoginBox","FormLogin","register","setValue","handleSubmit","getValues","formState","errors","onSubmit","data","console","log","popup","setPopup","isActive","variant","margin","height"],"sources":["C:/foodngo/src/components/forms/FormLogin.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Constants,\r\n  inputDataDelivery,\r\n  inputDataPersonal,\r\n  inputDataSpecial,\r\n  loginData,\r\n} from \"../../styles/Constants\";\r\nimport { setInputs, setSingleInput } from \"../functions/setInputsToForm\";\r\nimport { popupBlock } from \"../PopupBlock\";\r\nimport { GridBox2 } from \"../../style\";\r\nimport { FormBox, FormSpecialBox } from \"../../styles/OrderTrans\";\r\nimport { GrayButtonInput } from \"../../styles/Input\";\r\nimport {\r\n  ButtonText,\r\n  InputSectionText,\r\n  SerifText,\r\n} from \"../../styles/TextStyles\";\r\nimport { GrayButton } from \"../../styles/Buttons\";\r\nimport { LoginBox } from \"../../styles/Header\";\r\n\r\nexport const FormLogin = () => {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm<FormData>();\r\n  const onSubmit = (data: any) => console.log(getValues);\r\n  const [popup, setPopup] = useState({ isActive: false, variant: \"\" });\r\n\r\n  return (\r\n    <LoginBox>\r\n      <>{setSingleInput(loginData.data[0], register, setPopup)}</>\r\n      <>{setSingleInput(loginData.data[1], register, setPopup)}</>\r\n      <GrayButtonInput\r\n        type=\"submit\"\r\n        style={{ margin: \"10px 0 0 0\", height: \"50px\" }}\r\n      />\r\n    </LoginBox>\r\n  );\r\n};\r\n{\r\n  /* <GridBox2 onSubmit={handleSubmit(onSubmit)}>\r\n<>{setInputs(loginData, register, setPopup, errors)}</>\r\n<>{setInputs(passwordData, register, setPopup, errors)}</FormBox>\r\n<GrayButtonInput type=\"submit\" />\r\n</GridBox2> */\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAKEC,SAAS,QACJ,wBAAwB;AAC/B,SAAoBC,cAAc,QAAQ,8BAA8B;AAIxE,SAASC,eAAe,QAAQ,oBAAoB;AAOpD,SAASC,QAAQ,QAAQ,qBAAqB;AAAC;AAAA;AAE/C,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM;IACJC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGX,OAAO,EAAY;EACvB,MAAMY,QAAQ,GAAIC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;EACtD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,QAAQ,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAEpE,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAA,UAAGjB,cAAc,CAACD,SAAS,CAACY,IAAI,CAAC,CAAC,CAAC,EAAEP,QAAQ,EAAEW,QAAQ;IAAC,iBAAI,eAC5D;MAAA,UAAGf,cAAc,CAACD,SAAS,CAACY,IAAI,CAAC,CAAC,CAAC,EAAEP,QAAQ,EAAEW,QAAQ;IAAC,iBAAI,eAC5D,QAAC,eAAe;MACd,IAAI,EAAC,QAAQ;MACb,KAAK,EAAE;QAAEG,MAAM,EAAE,YAAY;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QAChD;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEf,CAAC;AAAC,GArBWhB,SAAS;EAAA,QAOhBL,OAAO;AAAA;AAAA,KAPAK,SAAS;AAsBtB;EACE;AACF;AACA;AACA;AACA;AAJE;AAKD;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}