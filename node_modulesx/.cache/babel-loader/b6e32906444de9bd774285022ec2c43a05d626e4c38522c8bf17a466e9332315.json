{"ast":null,"code":"import { eng } from \"./eng\";\nimport { pl } from \"./pl\";\nconst {\n  defaultLanguage\n} = {\n  defaultLanguage: \"pl\"\n};\nexport let language = localStorage.getItem(\"language\");\nexport const initLanguage = name => {\n  localStorage.setItem(\"password\", name);\n  language = name;\n};\nexport const saveLanguage = name => {\n  language = localStorage.getItem(\"language\");\n};\nexport const getString = (area, stringName) => {\n  if (!language) {\n    language = defaultLanguage;\n  }\n  if (language === \"pl\") {\n    return pl[area][stringName];\n  }\n  if (language === \"eng\") {\n    return eng[area][stringName];\n  }\n  return language !== null ? language[area][stringName] : eng[area][stringName];\n  // if (language === 'pl') {\n  //   return en[area][stringName];\n  // }\n};","map":{"version":3,"names":["eng","pl","defaultLanguage","language","localStorage","getItem","initLanguage","name","setItem","saveLanguage","getString","area","stringName"],"sources":["C:/foodngo/src/locales/languages/string.tsx"],"sourcesContent":["import { PlusImg } from \"../images/plus\";\r\nimport { eng } from \"./eng\";\r\nimport { pl } from \"./pl\";\r\n\r\nconst { defaultLanguage } = { defaultLanguage: \"pl\" };\r\n\r\ntype LanguageType = \"pl\" | \"eng\";\r\nexport let language: any = localStorage.getItem(\"language\");\r\nexport const initLanguage = (name: LanguageType) => {\r\n  localStorage.setItem(\"password\", name);\r\n  language = name;\r\n};\r\nexport const saveLanguage = (name: LanguageType) => {\r\n  language = localStorage.getItem(\"language\");\r\n};\r\n\r\nexport const getString = <AreaName extends keyof typeof pl>(\r\n  area: AreaName,\r\n  stringName: keyof typeof pl[AreaName]\r\n) => {\r\n  if (!language) {\r\n    language = defaultLanguage as LanguageType;\r\n  }\r\n  if (language === \"pl\") {\r\n    return pl[area][stringName];\r\n  }\r\n  if (language === \"eng\") {\r\n    return eng[area][stringName];\r\n  }\r\n  return language !== null ? language[area][stringName] : eng[area][stringName];\r\n  // if (language === 'pl') {\r\n  //   return en[area][stringName];\r\n  // }\r\n};\r\n\r\nexport type StringArea = keyof typeof pl;\r\n"],"mappings":"AACA,SAASA,GAAG,QAAQ,OAAO;AAC3B,SAASC,EAAE,QAAQ,MAAM;AAEzB,MAAM;EAAEC;AAAgB,CAAC,GAAG;EAAEA,eAAe,EAAE;AAAK,CAAC;AAGrD,OAAO,IAAIC,QAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;AAC3D,OAAO,MAAMC,YAAY,GAAIC,IAAkB,IAAK;EAClDH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,IAAI,CAAC;EACtCJ,QAAQ,GAAGI,IAAI;AACjB,CAAC;AACD,OAAO,MAAME,YAAY,GAAIF,IAAkB,IAAK;EAClDJ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,CACvBC,IAAc,EACdC,UAAqC,KAClC;EACH,IAAI,CAACT,QAAQ,EAAE;IACbA,QAAQ,GAAGD,eAA+B;EAC5C;EACA,IAAIC,QAAQ,KAAK,IAAI,EAAE;IACrB,OAAOF,EAAE,CAACU,IAAI,CAAC,CAACC,UAAU,CAAC;EAC7B;EACA,IAAIT,QAAQ,KAAK,KAAK,EAAE;IACtB,OAAOH,GAAG,CAACW,IAAI,CAAC,CAACC,UAAU,CAAC;EAC9B;EACA,OAAOT,QAAQ,KAAK,IAAI,GAAGA,QAAQ,CAACQ,IAAI,CAAC,CAACC,UAAU,CAAC,GAAGZ,GAAG,CAACW,IAAI,CAAC,CAACC,UAAU,CAAC;EAC7E;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}