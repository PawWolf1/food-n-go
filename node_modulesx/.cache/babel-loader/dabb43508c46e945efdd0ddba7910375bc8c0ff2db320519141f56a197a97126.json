{"ast":null,"code":"var _jsxFileName = \"C:\\\\foodngo\\\\src\\\\components\\\\CartSlider.tsx\",\n  _s = $RefreshSig$();\nimport { GrayButton } from \"../styles/Buttons\";\nimport { CardSliderBox, CartMainBox, CartDownBox, CartDownButtonBox } from \"../styles/CartBox\";\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { priceAll } from \"./functions/priceAll\";\nimport { generateList } from \"./functions/itemList\";\nimport { getString } from \"../locales/languages/string\";\nimport { useDispatch } from \"react-redux\";\nimport { clear } from \"../store/cart\";\nimport { setPopup } from \"../store/popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartSlider = _ref => {\n  _s();\n  let {\n    cart,\n    setCart,\n    mode\n  } = _ref;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  console.log(\"xASdSDA\", cart);\n  return /*#__PURE__*/_jsxDEV(CardSliderBox, {\n    id: \"CardSlider\",\n    children: [/*#__PURE__*/_jsxDEV(CartMainBox, {\n      children: generateList(cart, setCart, mode)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), mode === \"cart\" ? /*#__PURE__*/_jsxDEV(CartDownBox, {\n      children: [/*#__PURE__*/_jsxDEV(SerifText, {\n        children: [getString(\"other\", \"amount\"), \" \", priceAll(cart), \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartDownButtonBox, {\n        children: [/*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => navigate(\"/OrderTransaction\", {\n            state: {\n              cart\n            }\n          }),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: getString(\"buttons\", \"order\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n          onClick: () => dispatch(setPopup({\n            message: \"areYouSureClear\",\n            type: \"confirm\",\n            onConfirm: () => dispatch(clear())\n          })),\n          children: /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: getString(\"buttons\", \"clear\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GrayButton, {\n        onClick: () => dispatch(setPopup({\n          message: \"pickListName\",\n          type: \"input\",\n          onConfirm: \"AddMyList\"\n        })),\n        children: /*#__PURE__*/_jsxDEV(ButtonText, {\n          children: getString(\"buttons\", \"saveList\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CartSlider, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = CartSlider;\nvar _c;\n$RefreshReg$(_c, \"CartSlider\");","map":{"version":3,"names":["GrayButton","CardSliderBox","CartMainBox","CartDownBox","CartDownButtonBox","ButtonText","SerifText","useNavigate","priceAll","generateList","getString","useDispatch","clear","setPopup","CartSlider","cart","setCart","mode","navigate","dispatch","console","log","state","message","type","onConfirm"],"sources":["C:/foodngo/src/components/CartSlider.tsx"],"sourcesContent":["import { GrayButton } from \"../styles/Buttons\";\r\nimport {\r\n  CardSliderBox,\r\n  CartMainBox,\r\n  CartDownBox,\r\n  CartDownButtonBox,\r\n} from \"../styles/CartBox\";\r\nimport { ButtonText, SerifText } from \"../styles/TextStyles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { priceAll } from \"./functions/priceAll\";\r\nimport { generateList } from \"./functions/itemList\";\r\nimport { getString } from \"../locales/languages/string\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clear } from \"../store/cart\";\r\nimport { setPopup } from \"../store/popup\";\r\nimport { addMyLists } from \"../store/lists\";\r\nexport const CartSlider = ({ cart, setCart, mode }: any) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  console.log(\"xASdSDA\", cart);\r\n\r\n  return (\r\n    <CardSliderBox id=\"CardSlider\">\r\n      <CartMainBox>{generateList(cart, setCart, mode)}</CartMainBox>\r\n\r\n      {mode === \"cart\" ? (\r\n        <CartDownBox>\r\n          <SerifText>\r\n            {getString(\"other\", \"amount\")} {priceAll(cart)}$\r\n          </SerifText>\r\n          <CartDownButtonBox>\r\n            <GrayButton\r\n              onClick={() =>\r\n                navigate(\"/OrderTransaction\", {\r\n                  state: {\r\n                    cart,\r\n                  },\r\n                })\r\n              }\r\n            >\r\n              <ButtonText>{getString(\"buttons\", \"order\")}</ButtonText>\r\n            </GrayButton>\r\n            <GrayButton\r\n              onClick={() =>\r\n                dispatch(\r\n                  setPopup({\r\n                    message: \"areYouSureClear\",\r\n                    type: \"confirm\",\r\n                    onConfirm: () => dispatch(clear()),\r\n                  })\r\n                )\r\n              }\r\n            >\r\n              <ButtonText>{getString(\"buttons\", \"clear\")}</ButtonText>\r\n            </GrayButton>\r\n          </CartDownButtonBox>\r\n          <GrayButton\r\n            onClick={() =>\r\n              dispatch(\r\n                setPopup({\r\n                  message: \"pickListName\",\r\n                  type: \"input\",\r\n                  onConfirm: \"AddMyList\",\r\n                })\r\n              )\r\n            }\r\n          >\r\n            <ButtonText>{getString(\"buttons\", \"saveList\")}</ButtonText>\r\n          </GrayButton>\r\n        </CartDownBox>\r\n      ) : null}\r\n    </CardSliderBox>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SACEC,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,iBAAiB,QACZ,mBAAmB;AAC1B,SAASC,UAAU,EAAEC,SAAS,QAAQ,sBAAsB;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,QAAQ,gBAAgB;AAAC;AAE1C,OAAO,MAAMC,UAAU,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAU,CAAC;EACrD,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,QAAQ,GAAGR,WAAW,EAAE;EAC9BS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEN,IAAI,CAAC;EAE5B,oBACE,QAAC,aAAa;IAAC,EAAE,EAAC,YAAY;IAAA,wBAC5B,QAAC,WAAW;MAAA,UAAEN,YAAY,CAACM,IAAI,EAAEC,OAAO,EAAEC,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QAAe,EAE7DA,IAAI,KAAK,MAAM,gBACd,QAAC,WAAW;MAAA,wBACV,QAAC,SAAS;QAAA,WACPP,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,OAAGF,QAAQ,CAACO,IAAI,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC,eACZ,QAAC,iBAAiB;QAAA,wBAChB,QAAC,UAAU;UACT,OAAO,EAAE,MACPG,QAAQ,CAAC,mBAAmB,EAAE;YAC5BI,KAAK,EAAE;cACLP;YACF;UACF,CAAC,CACF;UAAA,uBAED,QAAC,UAAU;YAAA,UAAEL,SAAS,CAAC,SAAS,EAAE,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QAC7C,eACb,QAAC,UAAU;UACT,OAAO,EAAE,MACPS,QAAQ,CACNN,QAAQ,CAAC;YACPU,OAAO,EAAE,iBAAiB;YAC1BC,IAAI,EAAE,SAAS;YACfC,SAAS,EAAE,MAAMN,QAAQ,CAACP,KAAK,EAAE;UACnC,CAAC,CAAC,CAEL;UAAA,uBAED,QAAC,UAAU;YAAA,UAAEF,SAAS,CAAC,SAAS,EAAE,OAAO;UAAC;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA,QAC7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,eACpB,QAAC,UAAU;QACT,OAAO,EAAE,MACPS,QAAQ,CACNN,QAAQ,CAAC;UACPU,OAAO,EAAE,cAAc;UACvBC,IAAI,EAAE,OAAO;UACbC,SAAS,EAAE;QACb,CAAC,CAAC,CAEL;QAAA,uBAED,QAAC,UAAU;UAAA,UAAEf,SAAS,CAAC,SAAS,EAAE,UAAU;QAAC;UAAA;UAAA;UAAA;QAAA;MAAc;QAAA;QAAA;QAAA;MAAA,QAChD;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,GACZ,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACM;AAEpB,CAAC;AAAC,GAzDWI,UAAU;EAAA,QACJP,WAAW,EACXI,WAAW;AAAA;AAAA,KAFjBG,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}